/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { QueryComplexity } from "nexus/dist/plugins/queryComplexityPlugin"
import type { FieldAuthorizeResolver } from "nexus/dist/plugins/fieldAuthorizePlugin"
import type { core, connectionPluginCore } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * Decimal custom scalar type
     */
    decimal<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "Decimal";
    /**
     * The `BigInt` scalar type represents non-fractional signed whole numeric values.
     */
    BigInt<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "BigInt";
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    DateTime<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "DateTime";
    /**
     * The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
     */
    JSON<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "JSON";
    /**
     * Represents NULL values
     */
    Void<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "Void";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * Decimal custom scalar type
     */
    decimal<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "Decimal";
    /**
     * The `BigInt` scalar type represents non-fractional signed whole numeric values.
     */
    BigInt<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "BigInt";
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    DateTime<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
    /**
     * The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
     */
    JSON<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "JSON";
    /**
     * Represents NULL values
     */
    Void<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "Void";
    /**
     * Adds a Relay-style connection to the type, with numerous options for configuration
     *
     * @see https://nexusjs.org/docs/plugins/connection
     */
    connectionField<FieldName extends string>(
      fieldName: FieldName,
      config: connectionPluginCore.ConnectionFieldConfig<TypeName, FieldName> & { totalCount: connectionPluginCore.ConnectionFieldResolver<TypeName, FieldName, "totalCount"> }
    ): void
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  AddressCreateInputArgs: { // input type
    address: string; // String!
    city: string; // String!
    country: NexusGenInputs['ConnectUniqueInputArgs']; // ConnectUniqueInputArgs!
    default: boolean; // Boolean!
    postalCode: string; // String!
    region?: string | null; // String
  }
  AddressOrderByInputArgs: { // input type
    active?: NexusGenEnums['SortOrder'] | null; // SortOrder
    address?: NexusGenEnums['SortOrder'] | null; // SortOrder
    city?: NexusGenEnums['SortOrder'] | null; // SortOrder
    country?: NexusGenInputs['CountryOrderByInputArgs'] | null; // CountryOrderByInputArgs
    countryId?: NexusGenEnums['SortOrder'] | null; // SortOrder
    createdDate?: NexusGenEnums['SortOrder'] | null; // SortOrder
    id?: NexusGenEnums['SortOrder'] | null; // SortOrder
    postalCode?: NexusGenEnums['SortOrder'] | null; // SortOrder
    region?: NexusGenEnums['SortOrder'] | null; // SortOrder
    updatedDate?: NexusGenEnums['SortOrder'] | null; // SortOrder
    user?: NexusGenInputs['UserOrderByInputArgs'] | null; // UserOrderByInputArgs
    userId?: NexusGenEnums['SortOrder'] | null; // SortOrder
  }
  AddressUpdateInputArgs: { // input type
    active?: boolean | null; // Boolean
    address?: string | null; // String
    city?: string | null; // String
    country?: NexusGenInputs['ConnectUniqueInputArgs'] | null; // ConnectUniqueInputArgs
    default?: boolean | null; // Boolean
    id: NexusGenScalars['BigInt']; // BigInt!
    postalCode?: string | null; // String
    region?: string | null; // String
  }
  AddressWhereInputArgs: { // input type
    active?: NexusGenInputs['BoolFilter'] | null; // BoolFilter
    address?: NexusGenInputs['StringFilter'] | null; // StringFilter
    city?: NexusGenInputs['StringFilter'] | null; // StringFilter
    country?: NexusGenInputs['CountryWhereInputArgs'] | null; // CountryWhereInputArgs
    createdDate?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    id?: NexusGenInputs['BigIntFilter'] | null; // BigIntFilter
    postalCode?: NexusGenInputs['StringFilter'] | null; // StringFilter
    region?: NexusGenInputs['StringFilter'] | null; // StringFilter
    updatedDate?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    userId?: NexusGenInputs['BigIntFilter'] | null; // BigIntFilter
  }
  AuditOrderByInputArgs: { // input type
    createdDate?: NexusGenEnums['SortOrder'] | null; // SortOrder
  }
  AuditWhereInputArgs: { // input type
    createdDate?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    event?: NexusGenInputs['StringFilter'] | null; // StringFilter
    id?: NexusGenInputs['BigIntFilter'] | null; // BigIntFilter
    recordId?: NexusGenInputs['BigIntFilter'] | null; // BigIntFilter
    recordType?: NexusGenInputs['RecordTypeFilter'] | null; // RecordTypeFilter
    updatedDate?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    userId?: NexusGenInputs['BigIntFilter'] | null; // BigIntFilter
  }
  BigIntFilter: { // input type
    equals?: NexusGenScalars['BigInt'] | null; // BigInt
    gt?: NexusGenScalars['BigInt'] | null; // BigInt
    gte?: NexusGenScalars['BigInt'] | null; // BigInt
    in?: NexusGenScalars['BigInt'][] | null; // [BigInt!]
    lt?: NexusGenScalars['BigInt'] | null; // BigInt
    lte?: NexusGenScalars['BigInt'] | null; // BigInt
    not?: NexusGenScalars['BigInt'] | null; // BigInt
    notIn?: NexusGenScalars['BigInt'][] | null; // [BigInt!]
  }
  BoolFilter: { // input type
    equals?: boolean | null; // Boolean
    not?: boolean | null; // Boolean
  }
  ConnectDisconnectUniqueInputArgs: { // input type
    connect: NexusGenInputs['WhereUniqueInputArgs']; // WhereUniqueInputArgs!
  }
  ConnectUniqueInputArgs: { // input type
    connect: NexusGenInputs['WhereUniqueInputArgs']; // WhereUniqueInputArgs!
  }
  CooperationAgreementCreateInputArgs: { // input type
    active: boolean; // Boolean!
    createAsUserId?: NexusGenScalars['BigInt'] | null; // BigInt
    customerId: NexusGenScalars['BigInt']; // BigInt!
    deliverables?: NexusGenInputs['CooperationAgreementCreateNestedDeliverableInputArgs'] | null; // CooperationAgreementCreateNestedDeliverableInputArgs
    endDate?: NexusGenScalars['DateTime'] | null; // DateTime
    equipmentDetails?: string | null; // String
    equipmentSupplied?: boolean | null; // Boolean
    extraWork: boolean; // Boolean!
    extraWorkNotification?: string | null; // String
    extraWorkNotificationOther?: string | null; // String
    openEnded: boolean; // Boolean!
    paymentTerm: string; // String!
    paymentTermDays: number; // Int!
    paymentTermOther?: string | null; // String
    paymentTermSpecial: string; // String!
    paymentType: string; // String!
    specialConditions: string; // String!
    startDate: NexusGenScalars['DateTime']; // DateTime!
    taskDescription: string; // String!
    terminationAgreement: string; // String!
  }
  CooperationAgreementCreateNestedDeliverableInputArgs: { // input type
    create: NexusGenInputs['DeliverableCreateInputArgs'][]; // [DeliverableCreateInputArgs!]!
  }
  CooperationAgreementOrderByInputArgs: { // input type
    createdDate?: NexusGenEnums['SortOrder'] | null; // SortOrder
    startDate?: NexusGenEnums['SortOrder'] | null; // SortOrder
    updatedDate?: NexusGenEnums['SortOrder'] | null; // SortOrder
    user?: NexusGenInputs['UserOrderByInputArgs'] | null; // UserOrderByInputArgs
  }
  CooperationAgreementUpdateInputArgs: { // input type
    active?: boolean | null; // Boolean
    customerId?: NexusGenScalars['BigInt'] | null; // BigInt
    deliverables?: NexusGenInputs['CooperationAgreementUpdateNestedDeliverablesInputArgs'] | null; // CooperationAgreementUpdateNestedDeliverablesInputArgs
    endDate?: NexusGenScalars['DateTime'] | null; // DateTime
    equipmentDetails?: string | null; // String
    equipmentSupplied?: boolean | null; // Boolean
    extraWork?: boolean | null; // Boolean
    extraWorkNotification?: string | null; // String
    extraWorkNotificationOther?: string | null; // String
    openEnded?: boolean | null; // Boolean
    paymentTerm?: string | null; // String
    paymentTermDays?: number | null; // Int
    paymentTermOther?: string | null; // String
    paymentTermSpecial?: string | null; // String
    paymentType?: string | null; // String
    specialConditions?: string | null; // String
    startDate?: NexusGenScalars['DateTime'] | null; // DateTime
    taskDescription?: string | null; // String
    terminationAgreement?: string | null; // String
  }
  CooperationAgreementUpdateNestedDeliverableInputArgs: { // input type
    data: NexusGenInputs['DeliverableUpdateInputArgs']; // DeliverableUpdateInputArgs!
    where: NexusGenInputs['WhereUniqueInputArgs']; // WhereUniqueInputArgs!
  }
  CooperationAgreementUpdateNestedDeliverablesInputArgs: { // input type
    create?: NexusGenInputs['DeliverableCreateInputArgs'][] | null; // [DeliverableCreateInputArgs!]
    delete?: NexusGenInputs['WhereUniqueInputArgs'][] | null; // [WhereUniqueInputArgs!]
    update?: NexusGenInputs['CooperationAgreementUpdateNestedDeliverableInputArgs'][] | null; // [CooperationAgreementUpdateNestedDeliverableInputArgs!]
  }
  CooperationAgreementWhereInputArgs: { // input type
    active?: NexusGenInputs['BoolFilter'] | null; // BoolFilter
    createdDate?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    id?: NexusGenInputs['BigIntFilter'] | null; // BigIntFilter
    query?: string | null; // String
    startDate?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    updatedDate?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    user?: NexusGenInputs['UserWhereInputArgs'] | null; // UserWhereInputArgs
  }
  CountryOrderByInputArgs: { // input type
    active?: NexusGenEnums['SortOrder'] | null; // SortOrder
    code?: NexusGenEnums['SortOrder'] | null; // SortOrder
    createdDate?: NexusGenEnums['SortOrder'] | null; // SortOrder
    id?: NexusGenEnums['SortOrder'] | null; // SortOrder
    name_da?: NexusGenEnums['SortOrder'] | null; // SortOrder
    name_en?: NexusGenEnums['SortOrder'] | null; // SortOrder
    updatedDate?: NexusGenEnums['SortOrder'] | null; // SortOrder
  }
  CountryWhereInputArgs: { // input type
    active?: NexusGenInputs['BoolFilter'] | null; // BoolFilter
    code?: NexusGenInputs['StringFilter'] | null; // StringFilter
    createdDate?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    id?: NexusGenInputs['BigIntFilter'] | null; // BigIntFilter
    name?: NexusGenInputs['StringFilter'] | null; // StringFilter
    updatedDate?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
  }
  CustomerCreateInputArgs: { // input type
    address: NexusGenInputs['CustomerCreateNestedAddressInputArgs']; // CustomerCreateNestedAddressInputArgs!
    contact: string; // String!
    createAsUserId?: NexusGenScalars['BigInt'] | null; // BigInt
    ean?: NexusGenScalars['BigInt'] | null; // BigInt
    email: string; // String!
    name: string; // String!
    paymentDueDays?: number | null; // Int
    phoneNumber: string; // String!
    type: NexusGenEnums['CustomerTypeEnum']; // CustomerTypeEnum!
    vatId?: string | null; // String
  }
  CustomerCreateNestedAddressInputArgs: { // input type
    create: NexusGenInputs['AddressCreateInputArgs']; // AddressCreateInputArgs!
  }
  CustomerOrderByInputArgs: { // input type
    active?: NexusGenEnums['SortOrder'] | null; // SortOrder
    address?: NexusGenInputs['AddressOrderByInputArgs'] | null; // AddressOrderByInputArgs
    addressId?: NexusGenEnums['SortOrder'] | null; // SortOrder
    contact?: NexusGenEnums['SortOrder'] | null; // SortOrder
    createdDate?: NexusGenEnums['SortOrder'] | null; // SortOrder
    ean?: NexusGenEnums['SortOrder'] | null; // SortOrder
    email?: NexusGenEnums['SortOrder'] | null; // SortOrder
    id?: NexusGenEnums['SortOrder'] | null; // SortOrder
    name?: NexusGenEnums['SortOrder'] | null; // SortOrder
    paymentDueDays?: NexusGenEnums['SortOrder'] | null; // SortOrder
    phoneNumber?: NexusGenEnums['SortOrder'] | null; // SortOrder
    type?: NexusGenEnums['SortOrder'] | null; // SortOrder
    updatedDate?: NexusGenEnums['SortOrder'] | null; // SortOrder
    user?: NexusGenInputs['UserOrderByInputArgs'] | null; // UserOrderByInputArgs
    userId?: NexusGenEnums['SortOrder'] | null; // SortOrder
    vatId?: NexusGenEnums['SortOrder'] | null; // SortOrder
  }
  CustomerTypeFilter: { // input type
    equals?: NexusGenEnums['CustomerTypeEnum'] | null; // CustomerTypeEnum
    in?: NexusGenEnums['CustomerTypeEnum'][] | null; // [CustomerTypeEnum!]
    not?: NexusGenEnums['CustomerTypeEnum'] | null; // CustomerTypeEnum
    notIn?: NexusGenEnums['CustomerTypeEnum'][] | null; // [CustomerTypeEnum!]
  }
  CustomerUpdateInputArgs: { // input type
    active?: boolean | null; // Boolean
    address?: NexusGenInputs['CustomerUpdateNestedAddressInputArgs'] | null; // CustomerUpdateNestedAddressInputArgs
    allowEarlyPayment?: boolean | null; // Boolean
    contact?: string | null; // String
    ean?: NexusGenScalars['BigInt'] | null; // BigInt
    email?: string | null; // String
    name?: string | null; // String
    paymentDueDays?: number | null; // Int
    phoneNumber?: string | null; // String
    type?: NexusGenEnums['CustomerTypeEnum'] | null; // CustomerTypeEnum
    vatId?: string | null; // String
  }
  CustomerUpdateNestedAddressInputArgs: { // input type
    update: NexusGenInputs['AddressUpdateInputArgs']; // AddressUpdateInputArgs!
  }
  CustomerWhereInputArgs: { // input type
    active?: NexusGenInputs['BoolFilter'] | null; // BoolFilter
    address?: NexusGenInputs['AddressWhereInputArgs'] | null; // AddressWhereInputArgs
    contact?: NexusGenInputs['StringFilter'] | null; // StringFilter
    createdDate?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    ean?: NexusGenInputs['BigIntFilter'] | null; // BigIntFilter
    email?: NexusGenInputs['StringFilter'] | null; // StringFilter
    id?: NexusGenInputs['BigIntFilter'] | null; // BigIntFilter
    name?: NexusGenInputs['StringFilter'] | null; // StringFilter
    paymentDueDays?: NexusGenInputs['IntFilter'] | null; // IntFilter
    phoneNumber?: NexusGenInputs['StringFilter'] | null; // StringFilter
    private?: NexusGenInputs['BoolFilter'] | null; // BoolFilter
    query?: string | null; // String
    type?: NexusGenInputs['CustomerTypeFilter'] | null; // CustomerTypeFilter
    updatedDate?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    user?: NexusGenInputs['UserWhereInputArgs'] | null; // UserWhereInputArgs
    vatId?: NexusGenInputs['BigIntFilter'] | null; // BigIntFilter
  }
  DateTimeFilter: { // input type
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    not?: string | null; // String
    notIn?: string[] | null; // [String!]
  }
  DeductionCreateInputArgs: { // input type
    createAsUserId?: NexusGenScalars['BigInt'] | null; // BigInt
    currency: string; // String!
    description: string; // String!
    includeVat: boolean; // Boolean!
    status: NexusGenEnums['DeductionStatusEnum']; // DeductionStatusEnum!
    total: NexusGenScalars['Decimal']; // Decimal!
  }
  DeductionListRelationWhereArgs: { // input type
    every?: NexusGenInputs['DeductionWhereInputArgs'] | null; // DeductionWhereInputArgs
    none?: NexusGenInputs['DeductionWhereInputArgs'] | null; // DeductionWhereInputArgs
    some?: NexusGenInputs['DeductionWhereInputArgs'] | null; // DeductionWhereInputArgs
  }
  DeductionOrderByInputArgs: { // input type
    createdDate?: NexusGenEnums['SortOrder'] | null; // SortOrder
    description?: NexusGenEnums['SortOrder'] | null; // SortOrder
    status?: NexusGenEnums['SortOrder'] | null; // SortOrder
    updatedDate?: NexusGenEnums['SortOrder'] | null; // SortOrder
    user?: NexusGenInputs['UserOrderByInputArgs'] | null; // UserOrderByInputArgs
    userId?: NexusGenEnums['SortOrder'] | null; // SortOrder
  }
  DeductionStatusFilter: { // input type
    equals?: NexusGenEnums['DeductionStatusEnum'] | null; // DeductionStatusEnum
    in?: NexusGenEnums['DeductionStatusEnum'][] | null; // [DeductionStatusEnum!]
    not?: NexusGenEnums['DeductionStatusEnum'] | null; // DeductionStatusEnum
    notIn?: NexusGenEnums['DeductionStatusEnum'][] | null; // [DeductionStatusEnum!]
  }
  DeductionUpdateInputArgs: { // input type
    active?: boolean | null; // Boolean
    currency?: string | null; // String
    description?: string | null; // String
    includeVat?: boolean | null; // Boolean
    status?: NexusGenEnums['DeductionStatusEnum'] | null; // DeductionStatusEnum
    total?: NexusGenScalars['Decimal'] | null; // Decimal
  }
  DeductionWhereInputArgs: { // input type
    active?: NexusGenInputs['BoolFilter'] | null; // BoolFilter
    createdDate?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    description?: NexusGenInputs['StringFilter'] | null; // StringFilter
    id?: NexusGenInputs['BigIntFilter'] | null; // BigIntFilter
    query?: string | null; // String
    status?: NexusGenInputs['DeductionStatusFilter'] | null; // DeductionStatusFilter
    updatedDate?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    user?: NexusGenInputs['UserWhereInputArgs'] | null; // UserWhereInputArgs
  }
  DeliverableCreateInputArgs: { // input type
    description: string; // String!
  }
  DeliverableOrderByInputArgs: { // input type
    description?: NexusGenEnums['SortOrder'] | null; // SortOrder
  }
  DeliverableUpdateInputArgs: { // input type
    description?: string | null; // String
  }
  FloatFilter: { // input type
    equals?: number | null; // Float
    gt?: number | null; // Float
    gte?: number | null; // Float
    in?: number[] | null; // [Float!]
    lt?: number | null; // Float
    lte?: number | null; // Float
    not?: number | null; // Float
    notIn?: number[] | null; // [Float!]
  }
  IntFilter: { // input type
    equals?: number | null; // Int
    gt?: number | null; // Int
    gte?: number | null; // Int
    in?: number[] | null; // [Int!]
    lt?: number | null; // Int
    lte?: number | null; // Int
    not?: number | null; // Int
    notIn?: number[] | null; // [Int!]
  }
  InvoiceBulkUpdateInputArgs: { // input type
    data?: NexusGenInputs['InvoiceUpdateInputArgs'] | null; // InvoiceUpdateInputArgs
    where?: NexusGenInputs['WhereUniqueInputArgs'] | null; // WhereUniqueInputArgs
  }
  InvoiceCreateInputArgs: { // input type
    createAsUserId?: NexusGenScalars['BigInt'] | null; // BigInt
    currency: string; // String!
    customer: NexusGenInputs['InvoiceCreateNestedCustomerInputArgs']; // InvoiceCreateNestedCustomerInputArgs!
    customerContact: string; // String!
    customerEmail: string; // String!
    earlyPayment: boolean; // Boolean!
    endDate: NexusGenScalars['DateTime']; // DateTime!
    hoursWorked: number; // Int!
    includeVat: boolean; // Boolean!
    invoiceDate: NexusGenScalars['DateTime']; // DateTime!
    jobType: NexusGenInputs['InvoiceCreateNestedJobTypeInputArgs']; // InvoiceCreateNestedJobTypeInputArgs!
    lines: NexusGenInputs['InvoiceCreateNestedLineInputArgs']; // InvoiceCreateNestedLineInputArgs!
    note?: string | null; // String
    paymentDueDays: number; // Int!
    reference?: string | null; // String
    sendInvoiceCopyTo?: string | null; // String
    startDate: NexusGenScalars['DateTime']; // DateTime!
    status: NexusGenEnums['InvoiceStatusEnum']; // InvoiceStatusEnum!
    task?: NexusGenInputs['InvoiceCreateNestedTaskInputArgs'] | null; // InvoiceCreateNestedTaskInputArgs
    termsAccepted: boolean; // Boolean!
    useCredit: boolean; // Boolean!
    vacationPayment: boolean; // Boolean!
  }
  InvoiceCreateNestedCustomerInputArgs: { // input type
    connect?: NexusGenInputs['WhereUniqueInputArgs'] | null; // WhereUniqueInputArgs
    create?: NexusGenInputs['CustomerCreateInputArgs'] | null; // CustomerCreateInputArgs
  }
  InvoiceCreateNestedJobTypeInputArgs: { // input type
    connect: NexusGenInputs['WhereUniqueInputArgs']; // WhereUniqueInputArgs!
  }
  InvoiceCreateNestedLineInputArgs: { // input type
    create: NexusGenInputs['InvoiceLineCreateInputArgs'][]; // [InvoiceLineCreateInputArgs!]!
  }
  InvoiceCreateNestedTaskInputArgs: { // input type
    connect: NexusGenInputs['WhereUniqueInputArgs']; // WhereUniqueInputArgs!
  }
  InvoiceLineCreateInputArgs: { // input type
    description: string; // String!
    discountPercentage?: number | null; // Float
    index: number; // Int!
    quantity: number; // Float!
    unit?: string | null; // String
    unitPrice: number; // Float!
  }
  InvoiceLineOrderByInputArgs: { // input type
    description?: NexusGenEnums['SortOrder'] | null; // SortOrder
    discountPercentage?: NexusGenEnums['SortOrder'] | null; // SortOrder
    index?: NexusGenEnums['SortOrder'] | null; // SortOrder
    quantity?: NexusGenEnums['SortOrder'] | null; // SortOrder
    unit?: NexusGenEnums['SortOrder'] | null; // SortOrder
    unitPrice?: NexusGenEnums['SortOrder'] | null; // SortOrder
  }
  InvoiceLineUpdateInputArgs: { // input type
    active?: boolean | null; // Boolean
    description?: string | null; // String
    discountPercentage?: number | null; // Float
    index?: number | null; // Int
    quantity?: number | null; // Float
    unit?: string | null; // String
    unitPrice?: number | null; // Float
  }
  InvoiceListRelationWhereArgs: { // input type
    every?: NexusGenInputs['InvoiceWhereInputArgs'] | null; // InvoiceWhereInputArgs
    none?: NexusGenInputs['InvoiceWhereInputArgs'] | null; // InvoiceWhereInputArgs
    some?: NexusGenInputs['InvoiceWhereInputArgs'] | null; // InvoiceWhereInputArgs
  }
  InvoiceOrderByInputArgs: { // input type
    active?: NexusGenEnums['SortOrder'] | null; // SortOrder
    createdDate?: NexusGenEnums['SortOrder'] | null; // SortOrder
    currency?: NexusGenEnums['SortOrder'] | null; // SortOrder
    customer?: NexusGenInputs['CustomerOrderByInputArgs'] | null; // CustomerOrderByInputArgs
    customerId?: NexusGenEnums['SortOrder'] | null; // SortOrder
    endDate?: NexusGenEnums['SortOrder'] | null; // SortOrder
    hoursWorked?: NexusGenEnums['SortOrder'] | null; // SortOrder
    id?: NexusGenEnums['SortOrder'] | null; // SortOrder
    includeVat?: NexusGenEnums['SortOrder'] | null; // SortOrder
    invoiceDate?: NexusGenEnums['SortOrder'] | null; // SortOrder
    jobType?: NexusGenInputs['JobTypeOrderByInputArgs'] | null; // JobTypeOrderByInputArgs
    jobTypeId?: NexusGenEnums['SortOrder'] | null; // SortOrder
    note?: NexusGenEnums['SortOrder'] | null; // SortOrder
    paymentDueDays?: NexusGenEnums['SortOrder'] | null; // SortOrder
    reference?: NexusGenEnums['SortOrder'] | null; // SortOrder
    startDate?: NexusGenEnums['SortOrder'] | null; // SortOrder
    status?: NexusGenEnums['SortOrder'] | null; // SortOrder
    task?: NexusGenInputs['TaskOrderByInputArgs'] | null; // TaskOrderByInputArgs
    taskId?: NexusGenEnums['SortOrder'] | null; // SortOrder
    termsAccepted?: NexusGenEnums['SortOrder'] | null; // SortOrder
    total?: NexusGenEnums['SortOrder'] | null; // SortOrder
    updatedDate?: NexusGenEnums['SortOrder'] | null; // SortOrder
    user?: NexusGenInputs['UserOrderByInputArgs'] | null; // UserOrderByInputArgs
    userId?: NexusGenEnums['SortOrder'] | null; // SortOrder
    vacationPayment?: NexusGenEnums['SortOrder'] | null; // SortOrder
  }
  InvoiceStatusFilter: { // input type
    equals?: NexusGenEnums['InvoiceStatusEnum'] | null; // InvoiceStatusEnum
    in?: NexusGenEnums['InvoiceStatusEnum'][] | null; // [InvoiceStatusEnum!]
    not?: NexusGenEnums['InvoiceStatusEnum'] | null; // InvoiceStatusEnum
    notIn?: NexusGenEnums['InvoiceStatusEnum'][] | null; // [InvoiceStatusEnum!]
  }
  InvoiceUpdateInputArgs: { // input type
    active?: boolean | null; // Boolean
    currency?: string | null; // String
    customer?: NexusGenInputs['InvoiceUpdateNestedCustomerInputArgs'] | null; // InvoiceUpdateNestedCustomerInputArgs
    customerContact?: string | null; // String
    customerEmail?: string | null; // String
    earlyPayment?: boolean | null; // Boolean
    endDate?: NexusGenScalars['DateTime'] | null; // DateTime
    hoursWorked?: number | null; // Int
    includeVat?: boolean | null; // Boolean
    invoiceDate?: NexusGenScalars['DateTime'] | null; // DateTime
    jobType?: NexusGenInputs['InvoiceUpdateNestedJobTypeInputArgs'] | null; // InvoiceUpdateNestedJobTypeInputArgs
    lines?: NexusGenInputs['InvoiceUpdateNestedLinesInputArgs'] | null; // InvoiceUpdateNestedLinesInputArgs
    note?: string | null; // String
    paidAmountDkk?: NexusGenScalars['Decimal'] | null; // Decimal
    paymentDueDays?: number | null; // Int
    reference?: string | null; // String
    sendInvoiceCopyTo?: string | null; // String
    startDate?: NexusGenScalars['DateTime'] | null; // DateTime
    status?: NexusGenEnums['InvoiceStatusEnum'] | null; // InvoiceStatusEnum
    task?: NexusGenInputs['InvoiceUpdateNestedTaskInputArgs'] | null; // InvoiceUpdateNestedTaskInputArgs
    termsAccepted?: boolean | null; // Boolean
    useCredit?: boolean | null; // Boolean
    vacationPayment?: boolean | null; // Boolean
  }
  InvoiceUpdateNestedCustomerInputArgs: { // input type
    connect?: NexusGenInputs['WhereUniqueInputArgs'] | null; // WhereUniqueInputArgs
    create?: NexusGenInputs['CustomerCreateInputArgs'] | null; // CustomerCreateInputArgs
  }
  InvoiceUpdateNestedJobTypeInputArgs: { // input type
    connect: NexusGenInputs['WhereUniqueInputArgs']; // WhereUniqueInputArgs!
  }
  InvoiceUpdateNestedLineInputArgs: { // input type
    data: NexusGenInputs['InvoiceLineUpdateInputArgs']; // InvoiceLineUpdateInputArgs!
    where: NexusGenInputs['WhereUniqueInputArgs']; // WhereUniqueInputArgs!
  }
  InvoiceUpdateNestedLinesInputArgs: { // input type
    create?: NexusGenInputs['InvoiceLineCreateInputArgs'][] | null; // [InvoiceLineCreateInputArgs!]
    delete?: NexusGenInputs['WhereUniqueInputArgs'][] | null; // [WhereUniqueInputArgs!]
    update?: NexusGenInputs['InvoiceUpdateNestedLineInputArgs'][] | null; // [InvoiceUpdateNestedLineInputArgs!]
  }
  InvoiceUpdateNestedTaskInputArgs: { // input type
    connect?: NexusGenInputs['WhereUniqueInputArgs'] | null; // WhereUniqueInputArgs
    disconnect?: boolean | null; // Boolean
  }
  InvoiceUpdateStatusInputArgs: { // input type
    reason?: string | null; // String
    status: NexusGenEnums['InvoiceStatusEnum']; // InvoiceStatusEnum!
  }
  InvoiceWhereInputArgs: { // input type
    active?: NexusGenInputs['BoolFilter'] | null; // BoolFilter
    createdDate?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    currency?: NexusGenInputs['StringFilter'] | null; // StringFilter
    customer?: NexusGenInputs['CustomerWhereInputArgs'] | null; // CustomerWhereInputArgs
    endDate?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    hoursWorked?: NexusGenInputs['IntFilter'] | null; // IntFilter
    id?: NexusGenInputs['BigIntFilter'] | null; // BigIntFilter
    includeVat?: NexusGenInputs['BoolFilter'] | null; // BoolFilter
    invoiceDate?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    jobType?: NexusGenInputs['JobTypeWhereInputArgs'] | null; // JobTypeWhereInputArgs
    note?: NexusGenInputs['StringFilter'] | null; // StringFilter
    paymentDueDays?: NexusGenInputs['IntFilter'] | null; // IntFilter
    query?: string | null; // String
    reference?: NexusGenInputs['StringFilter'] | null; // StringFilter
    salaryId?: NexusGenInputs['BigIntFilter'] | null; // BigIntFilter
    startDate?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    status?: NexusGenInputs['InvoiceStatusFilter'] | null; // InvoiceStatusFilter
    task?: NexusGenInputs['TaskWhereInputArgs'] | null; // TaskWhereInputArgs
    termsAccepted?: NexusGenInputs['BoolFilter'] | null; // BoolFilter
    updatedDate?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    user?: NexusGenInputs['UserWhereInputArgs'] | null; // UserWhereInputArgs
    vacationPayment?: NexusGenInputs['BoolFilter'] | null; // BoolFilter
  }
  JobTypeOrderByInputArgs: { // input type
    active?: NexusGenEnums['SortOrder'] | null; // SortOrder
    classification?: NexusGenEnums['SortOrder'] | null; // SortOrder
    createdDate?: NexusGenEnums['SortOrder'] | null; // SortOrder
    description?: NexusGenEnums['SortOrder'] | null; // SortOrder
    group?: NexusGenEnums['SortOrder'] | null; // SortOrder
    id?: NexusGenEnums['SortOrder'] | null; // SortOrder
    name_da?: NexusGenEnums['SortOrder'] | null; // SortOrder
    name_en?: NexusGenEnums['SortOrder'] | null; // SortOrder
    parentId?: NexusGenEnums['SortOrder'] | null; // SortOrder
    updatedDate?: NexusGenEnums['SortOrder'] | null; // SortOrder
  }
  JobTypeWhereInputArgs: { // input type
    active?: NexusGenInputs['BoolFilter'] | null; // BoolFilter
    classification?: NexusGenInputs['StringFilter'] | null; // StringFilter
    createdDate?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    description?: NexusGenInputs['StringFilter'] | null; // StringFilter
    group?: NexusGenInputs['BoolFilter'] | null; // BoolFilter
    id?: NexusGenScalars['BigInt'] | null; // BigInt
    name?: NexusGenInputs['StringFilter'] | null; // StringFilter
    parent?: NexusGenInputs['JobTypeWhereInputArgs'] | null; // JobTypeWhereInputArgs
    updatedDate?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
  }
  RecordTypeFilter: { // input type
    equals?: NexusGenEnums['RecordTypeEnum'] | null; // RecordTypeEnum
    in?: NexusGenEnums['RecordTypeEnum'][] | null; // [RecordTypeEnum!]
    not?: NexusGenEnums['RecordTypeEnum'] | null; // RecordTypeEnum
    notIn?: NexusGenEnums['RecordTypeEnum'][] | null; // [RecordTypeEnum!]
  }
  ReferralCreateInputArgs: { // input type
    createAsUserId?: NexusGenScalars['BigInt'] | null; // BigInt
    email: string; // String!
    message: string; // String!
  }
  ReferralOrderByInputArgs: { // input type
    createdDate?: NexusGenEnums['SortOrder'] | null; // SortOrder
    id?: NexusGenEnums['SortOrder'] | null; // SortOrder
    updatedDate?: NexusGenEnums['SortOrder'] | null; // SortOrder
    user?: NexusGenInputs['UserOrderByInputArgs'] | null; // UserOrderByInputArgs
  }
  ReferralStatusFilter: { // input type
    equals?: NexusGenEnums['ReferralStatusEnum'] | null; // ReferralStatusEnum
    in?: NexusGenEnums['ReferralStatusEnum'][] | null; // [ReferralStatusEnum!]
    not?: NexusGenEnums['ReferralStatusEnum'] | null; // ReferralStatusEnum
    notIn?: NexusGenEnums['ReferralStatusEnum'][] | null; // [ReferralStatusEnum!]
  }
  ReferralWhereInputArgs: { // input type
    createdDate?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    email?: NexusGenInputs['StringFilter'] | null; // StringFilter
    id?: NexusGenInputs['BigIntFilter'] | null; // BigIntFilter
    query?: string | null; // String
    referredUser?: NexusGenInputs['UserWhereInputArgs'] | null; // UserWhereInputArgs
    status?: NexusGenInputs['ReferralStatusFilter'] | null; // ReferralStatusFilter
    updatedDate?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    user?: NexusGenInputs['UserWhereInputArgs'] | null; // UserWhereInputArgs
  }
  RoleFilter: { // input type
    equals?: NexusGenEnums['RoleEnum'] | null; // RoleEnum
    in?: NexusGenEnums['RoleEnum'][] | null; // [RoleEnum!]
    not?: NexusGenEnums['RoleEnum'] | null; // RoleEnum
    notIn?: NexusGenEnums['RoleEnum'][] | null; // [RoleEnum!]
  }
  SalaryCreateInputArgs: { // input type
    deductions?: number[] | null; // [Int!]
    invoices?: number[] | null; // [Int!]
    paymentDate: NexusGenScalars['DateTime']; // DateTime!
    userId?: NexusGenScalars['BigInt'] | null; // BigInt
  }
  SalaryOrderByInputArgs: { // input type
    createdDate?: NexusGenEnums['SortOrder'] | null; // SortOrder
    id?: NexusGenEnums['SortOrder'] | null; // SortOrder
    paymentDate?: NexusGenEnums['SortOrder'] | null; // SortOrder
    status?: NexusGenEnums['SortOrder'] | null; // SortOrder
    updatedDate?: NexusGenEnums['SortOrder'] | null; // SortOrder
    user?: NexusGenInputs['UserOrderByInputArgs'] | null; // UserOrderByInputArgs
    userId?: NexusGenEnums['SortOrder'] | null; // SortOrder
  }
  SalaryStatusFilter: { // input type
    equals?: NexusGenEnums['SalaryStatusEnum'] | null; // SalaryStatusEnum
    in?: NexusGenEnums['SalaryStatusEnum'][] | null; // [SalaryStatusEnum!]
    not?: NexusGenEnums['SalaryStatusEnum'] | null; // SalaryStatusEnum
    notIn?: NexusGenEnums['SalaryStatusEnum'][] | null; // [SalaryStatusEnum!]
  }
  SalaryUpdateInputArgs: { // input type
    deductions?: number[] | null; // [Int!]
    id?: NexusGenScalars['BigInt'] | null; // BigInt
    invoices?: number[] | null; // [Int!]
    paymentDate?: NexusGenScalars['DateTime'] | null; // DateTime
    status?: NexusGenEnums['SalaryStatusEnum'] | null; // SalaryStatusEnum
  }
  SalaryWhereInputArgs: { // input type
    createdDate?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    deductions?: NexusGenInputs['DeductionListRelationWhereArgs'] | null; // DeductionListRelationWhereArgs
    id?: NexusGenInputs['BigIntFilter'] | null; // BigIntFilter
    invoices?: NexusGenInputs['InvoiceListRelationWhereArgs'] | null; // InvoiceListRelationWhereArgs
    paymentDate?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    query?: string | null; // String
    status?: NexusGenInputs['SalaryStatusFilter'] | null; // SalaryStatusFilter
    updatedDate?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    user?: NexusGenInputs['UserWhereInputArgs'] | null; // UserWhereInputArgs
  }
  ServiceLogOrderByInputArgs: { // input type
    createdDate?: NexusGenEnums['SortOrder'] | null; // SortOrder
  }
  ServiceLogWhereInputArgs: { // input type
    createdDate?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    id?: NexusGenInputs['BigIntFilter'] | null; // BigIntFilter
    recordId?: NexusGenInputs['BigIntFilter'] | null; // BigIntFilter
    recordType?: NexusGenInputs['RecordTypeFilter'] | null; // RecordTypeFilter
    status?: NexusGenInputs['StringFilter'] | null; // StringFilter
    updatedDate?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
  }
  StatusFilter: { // input type
    equals?: NexusGenEnums['StatusEnum'] | null; // StatusEnum
    in?: NexusGenEnums['StatusEnum'][] | null; // [StatusEnum!]
    not?: NexusGenEnums['StatusEnum'] | null; // StatusEnum
    notIn?: NexusGenEnums['StatusEnum'][] | null; // [StatusEnum!]
  }
  StringFilter: { // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    not?: string | null; // String
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  }
  TaskCreateInputArgs: { // input type
    createAsUserId?: NexusGenScalars['BigInt'] | null; // BigInt
    customer: NexusGenInputs['TaskCreateNestedCustomerInputArgs']; // TaskCreateNestedCustomerInputArgs!
    description?: string | null; // String
    endDate: NexusGenScalars['DateTime']; // DateTime!
    expectedHours: number; // Int!
    jobType: NexusGenInputs['TaskCreateNestedJobTypeInputArgs']; // TaskCreateNestedJobTypeInputArgs!
    paymentAmount?: NexusGenScalars['Decimal'] | null; // Decimal
    paymentType?: NexusGenEnums['TaskPaymentTypeEnum'] | null; // TaskPaymentTypeEnum
    reference?: string | null; // String
    startDate: NexusGenScalars['DateTime']; // DateTime!
    status: NexusGenEnums['TaskStatusEnum']; // TaskStatusEnum!
    termsAccepted: boolean; // Boolean!
    title: string; // String!
  }
  TaskCreateNestedCustomerInputArgs: { // input type
    connect?: NexusGenInputs['WhereUniqueInputArgs'] | null; // WhereUniqueInputArgs
    create?: NexusGenInputs['CustomerCreateInputArgs'] | null; // CustomerCreateInputArgs
  }
  TaskCreateNestedJobTypeInputArgs: { // input type
    connect: NexusGenInputs['WhereUniqueInputArgs']; // WhereUniqueInputArgs!
  }
  TaskOrderByInputArgs: { // input type
    active?: NexusGenEnums['SortOrder'] | null; // SortOrder
    createdDate?: NexusGenEnums['SortOrder'] | null; // SortOrder
    customer?: NexusGenInputs['CustomerOrderByInputArgs'] | null; // CustomerOrderByInputArgs
    customerId?: NexusGenEnums['SortOrder'] | null; // SortOrder
    endDate?: NexusGenEnums['SortOrder'] | null; // SortOrder
    expectedHours?: NexusGenEnums['SortOrder'] | null; // SortOrder
    id?: NexusGenEnums['SortOrder'] | null; // SortOrder
    jobType?: NexusGenInputs['JobTypeOrderByInputArgs'] | null; // JobTypeOrderByInputArgs
    jobTypeId?: NexusGenEnums['SortOrder'] | null; // SortOrder
    reference?: NexusGenEnums['SortOrder'] | null; // SortOrder
    startDate?: NexusGenEnums['SortOrder'] | null; // SortOrder
    status?: NexusGenEnums['SortOrder'] | null; // SortOrder
    termsAccepted?: NexusGenEnums['SortOrder'] | null; // SortOrder
    title?: NexusGenEnums['SortOrder'] | null; // SortOrder
    updatedDate?: NexusGenEnums['SortOrder'] | null; // SortOrder
    user?: NexusGenInputs['UserOrderByInputArgs'] | null; // UserOrderByInputArgs
    userId?: NexusGenEnums['SortOrder'] | null; // SortOrder
  }
  TaskStatusFilter: { // input type
    equals?: NexusGenEnums['TaskStatusEnum'] | null; // TaskStatusEnum
    in?: NexusGenEnums['TaskStatusEnum'][] | null; // [TaskStatusEnum!]
    not?: NexusGenEnums['TaskStatusEnum'] | null; // TaskStatusEnum
    notIn?: NexusGenEnums['TaskStatusEnum'][] | null; // [TaskStatusEnum!]
  }
  TaskUpdateInputArgs: { // input type
    active?: boolean | null; // Boolean
    customer?: NexusGenInputs['TaskUpdateNestedCustomerInputArgs'] | null; // TaskUpdateNestedCustomerInputArgs
    description?: string | null; // String
    endDate?: NexusGenScalars['DateTime'] | null; // DateTime
    expectedHours?: number | null; // Int
    jobType?: NexusGenInputs['TaskUpdateNestedJobTypeInputArgs'] | null; // TaskUpdateNestedJobTypeInputArgs
    paymentAmount?: NexusGenScalars['Decimal'] | null; // Decimal
    paymentType?: NexusGenEnums['TaskPaymentTypeEnum'] | null; // TaskPaymentTypeEnum
    reference?: string | null; // String
    startDate?: NexusGenScalars['DateTime'] | null; // DateTime
    status?: NexusGenEnums['TaskStatusEnum'] | null; // TaskStatusEnum
    termsAccepted?: boolean | null; // Boolean
    title?: string | null; // String
  }
  TaskUpdateNestedCustomerInputArgs: { // input type
    connect?: NexusGenInputs['WhereUniqueInputArgs'] | null; // WhereUniqueInputArgs
    create?: NexusGenInputs['CustomerCreateInputArgs'] | null; // CustomerCreateInputArgs
  }
  TaskUpdateNestedJobTypeInputArgs: { // input type
    connect: NexusGenInputs['WhereUniqueInputArgs']; // WhereUniqueInputArgs!
  }
  TaskUpdateStatusInputArgs: { // input type
    reason?: string | null; // String
    status: NexusGenEnums['TaskStatusEnum']; // TaskStatusEnum!
  }
  TaskWhereInputArgs: { // input type
    active?: NexusGenInputs['BoolFilter'] | null; // BoolFilter
    createdDate?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    customer?: NexusGenInputs['CustomerWhereInputArgs'] | null; // CustomerWhereInputArgs
    endDate?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    expectedHours?: NexusGenInputs['IntFilter'] | null; // IntFilter
    id?: NexusGenInputs['BigIntFilter'] | null; // BigIntFilter
    invoices?: NexusGenInputs['InvoiceListRelationWhereArgs'] | null; // InvoiceListRelationWhereArgs
    jobType?: NexusGenInputs['JobTypeWhereInputArgs'] | null; // JobTypeWhereInputArgs
    query?: string | null; // String
    reference?: NexusGenInputs['StringFilter'] | null; // StringFilter
    startDate?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    status?: NexusGenInputs['TaskStatusFilter'] | null; // TaskStatusFilter
    termsAccepted?: NexusGenInputs['BoolFilter'] | null; // BoolFilter
    title?: NexusGenInputs['StringFilter'] | null; // StringFilter
    updatedDate?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    user?: NexusGenInputs['UserWhereInputArgs'] | null; // UserWhereInputArgs
  }
  UserOrderByInputArgs: { // input type
    active?: NexusGenEnums['SortOrder'] | null; // SortOrder
    address?: NexusGenInputs['AddressOrderByInputArgs'] | null; // AddressOrderByInputArgs
    createdDate?: NexusGenEnums['SortOrder'] | null; // SortOrder
    displayName?: NexusGenEnums['SortOrder'] | null; // SortOrder
    email?: NexusGenEnums['SortOrder'] | null; // SortOrder
    firstName?: NexusGenEnums['SortOrder'] | null; // SortOrder
    freelancerSituation?: NexusGenEnums['SortOrder'] | null; // SortOrder
    internalId?: NexusGenEnums['SortOrder'] | null; // SortOrder
    lastActive?: NexusGenEnums['SortOrder'] | null; // SortOrder
    lastName?: NexusGenEnums['SortOrder'] | null; // SortOrder
    phoneNumber?: NexusGenEnums['SortOrder'] | null; // SortOrder
    referral?: NexusGenEnums['SortOrder'] | null; // SortOrder
    role?: NexusGenEnums['SortOrder'] | null; // SortOrder
    title?: NexusGenEnums['SortOrder'] | null; // SortOrder
    updatedDate?: NexusGenEnums['SortOrder'] | null; // SortOrder
    userSpecifiedReferral?: NexusGenEnums['SortOrder'] | null; // SortOrder
  }
  UserUpdateInputArgs: { // input type
    accountSetupComplete?: boolean | null; // Boolean
    address?: string | null; // String
    bankAccount?: string | null; // String
    bankName?: string | null; // String
    bankRegistration?: string | null; // String
    baseRate?: number | null; // Float
    city?: string | null; // String
    countryId?: NexusGenScalars['BigInt'] | null; // BigInt
    currency?: string | null; // String
    email?: string | null; // String
    firstName?: string | null; // String
    freelancerSituation?: string | null; // String
    jobType?: NexusGenInputs['ConnectDisconnectUniqueInputArgs'] | null; // ConnectDisconnectUniqueInputArgs
    language?: string | null; // String
    lastName?: string | null; // String
    personId?: string | null; // String
    phoneNumber?: string | null; // String
    postalCode?: string | null; // String
    salaryPaymentDay?: number | null; // Int
    salaryPaymentType?: NexusGenEnums['SalaryPaymentTypeEnum'] | null; // SalaryPaymentTypeEnum
    salaryPaymentValue?: number | null; // Float
    taxCard?: NexusGenEnums['TaxCardEnum'] | null; // TaxCardEnum
    unit?: string | null; // String
    userSpecifiedReferral?: string | null; // String
    vacationPayment?: boolean | null; // Boolean
  }
  UserWhereInputArgs: { // input type
    active?: NexusGenInputs['BoolFilter'] | null; // BoolFilter
    address?: NexusGenInputs['WhereUniqueInputArgs'] | null; // WhereUniqueInputArgs
    createdDate?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    customer?: NexusGenInputs['WhereUniqueInputArgs'] | null; // WhereUniqueInputArgs
    displayName?: NexusGenInputs['StringFilter'] | null; // StringFilter
    email?: NexusGenInputs['StringFilter'] | null; // StringFilter
    firstName?: NexusGenInputs['StringFilter'] | null; // StringFilter
    id?: NexusGenInputs['BigIntFilter'] | null; // BigIntFilter
    lastActive?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    lastName?: NexusGenInputs['StringFilter'] | null; // StringFilter
    phoneNumber?: NexusGenInputs['StringFilter'] | null; // StringFilter
    query?: string | null; // String
    referral?: NexusGenInputs['StringFilter'] | null; // StringFilter
    role?: NexusGenInputs['RoleFilter'] | null; // RoleFilter
    updatedDate?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
  }
  WhereUniqueInputArgs: { // input type
    id: NexusGenScalars['BigInt']; // BigInt!
  }
}

export interface NexusGenEnums {
  CustomerTypeEnum: "BUSINESS" | "PRIVATE"
  DeductionStatusEnum: "APPROVED" | "DECLINED" | "DELETED_BY_USER" | "DRAFT" | "SENT"
  InvoiceStatusEnum: "APPROVED_BY_COMPANY" | "CANCELLED" | "COMPANY_DISPUTE" | "DEBT_COLLECTION" | "DENIED_BY_COMPANY" | "DRAFT" | "LATE_PAYMENT" | "MORE_INFO_NEEDED" | "PAID" | "PAYMENT_ON_HOLD" | "PAYMENT_RECEIVED" | "PENDING" | "SALARY_PAID" | "SALARY_PAID_CUSTOMER_NOT_PAID" | "SALARY_PAID_CUSTOMER_PAID" | "SENT" | "SENT_TO_COMPANY" | "SENT_TO_COMPANY_AWAITING_APPROVAL" | "SENT_TO_COMPANY_CONTRACT_MADE" | "SENT_TO_COMPANY_NEEDS_CONTRACT"
  RecordTypeEnum: "COMPANY" | "COOPERATION_AGREEMENT" | "CUSTOMER" | "DEDUCTION" | "INVOICE" | "INVOICE_LINE" | "REFERRAL" | "REWARD" | "SALARY" | "TASK" | "USER"
  ReferralStatusEnum: "NONE" | "PAID_INVOICE" | "SENT_INVOICE" | "SIGNED_UP"
  RoleEnum: "ADMIN" | "EMPLOYEE" | "USER"
  SalaryPaymentTypeEnum: "EARLY" | "ON_PAYMENT" | "TIMED" | "VALUE" | "VIA_INVOICE"
  SalaryStatusEnum: "DRAFT" | "PAID" | "SENT"
  SortOrder: "asc" | "desc"
  StatusEnum: "APPROVED" | "CANCELLED" | "COMPANY_DISPUTE" | "DEBT_COLLECTION" | "DENIED" | "DENIED_BY_COMPANY" | "DRAFT" | "LATE_PAYMENT" | "MORE_INFO_NEEDED" | "PAID" | "PENDING" | "SALARY_PAID" | "SENT" | "SENT_TO_COMPANY"
  TaskPaymentTypeEnum: "PER_HOUR" | "PROJECT_PRICE"
  TaskStatusEnum: "APPROVED" | "DENIED" | "DRAFT" | "MORE_INFO_NEEDED" | "PENDING" | "SENT"
  TaxCardEnum: "MAIN" | "SECONDARY"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  BigInt: any
  DateTime: any
  Decimal: any
  JSON: any
  Void: any
}

export interface NexusGenObjects {
  Address: { // root type
    active: boolean; // Boolean!
    address: string; // String!
    city: string; // String!
    countryId: NexusGenScalars['BigInt']; // BigInt!
    createdDate: NexusGenScalars['DateTime']; // DateTime!
    id: NexusGenScalars['BigInt']; // BigInt!
    postalCode: string; // String!
    region?: string | null; // String
    updatedDate: NexusGenScalars['DateTime']; // DateTime!
    userId: NexusGenScalars['BigInt']; // BigInt!
  }
  Audit: { // root type
    createdDate: NexusGenScalars['DateTime']; // DateTime!
    event?: string | null; // String
    id: NexusGenScalars['BigInt']; // BigInt!
    recordId?: NexusGenScalars['BigInt'] | null; // BigInt
    recordType?: string | null; // String
    updatedDate: NexusGenScalars['DateTime']; // DateTime!
    userId?: NexusGenScalars['BigInt'] | null; // BigInt
  }
  AuditConnection: { // root type
    edges: NexusGenRootTypes['AuditEdge'][]; // [AuditEdge!]!
    nodes: NexusGenRootTypes['Audit'][]; // [Audit!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number; // Int!
  }
  AuditEdge: { // root type
    cursor: string; // String!
    node: NexusGenRootTypes['Audit']; // Audit!
  }
  BankAccount: { // root type
    bankAccount?: string | null; // String
    bankName?: string | null; // String
    bankRegistration?: string | null; // String
    createdDate: NexusGenScalars['DateTime']; // DateTime!
    default?: boolean | null; // Boolean
    updatedDate: NexusGenScalars['DateTime']; // DateTime!
    userId: NexusGenScalars['BigInt']; // BigInt!
  }
  BulkUpdateResult: { // root type
    success?: boolean | null; // Boolean
  }
  CooperationAgreement: { // root type
    active: boolean; // Boolean!
    createdDate: NexusGenScalars['DateTime']; // DateTime!
    customerId: NexusGenScalars['BigInt']; // BigInt!
    endDate?: NexusGenScalars['DateTime'] | null; // DateTime
    equipmentDetails?: string | null; // String
    equipmentSupplied?: boolean | null; // Boolean
    extraWork: boolean; // Boolean!
    extraWorkNotification?: string | null; // String
    extraWorkNotificationOther?: string | null; // String
    id: NexusGenScalars['BigInt']; // BigInt!
    openEnded: boolean; // Boolean!
    paymentTerm: string; // String!
    paymentTermDays: number; // Int!
    paymentTermOther?: string | null; // String
    paymentTermSpecial?: string | null; // String
    paymentType: string; // String!
    specialConditions?: string | null; // String
    startDate: NexusGenScalars['DateTime']; // DateTime!
    taskDescription: string; // String!
    terminationAgreement: string; // String!
    updatedDate: NexusGenScalars['DateTime']; // DateTime!
    userId: NexusGenScalars['BigInt']; // BigInt!
  }
  CooperationAgreementConnection: { // root type
    edges: NexusGenRootTypes['CooperationAgreementEdge'][]; // [CooperationAgreementEdge!]!
    nodes: NexusGenRootTypes['CooperationAgreement'][]; // [CooperationAgreement!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number; // Int!
  }
  CooperationAgreementEdge: { // root type
    cursor: string; // String!
    node: NexusGenRootTypes['CooperationAgreement']; // CooperationAgreement!
  }
  Country: { // root type
    active: boolean; // Boolean!
    code: string; // String!
    createdDate: NexusGenScalars['DateTime']; // DateTime!
    id: NexusGenScalars['BigInt']; // BigInt!
    name_da: string; // String!
    name_en: string; // String!
    updatedDate: NexusGenScalars['DateTime']; // DateTime!
  }
  Customer: { // root type
    active: boolean; // Boolean!
    contact: string; // String!
    createdDate: NexusGenScalars['DateTime']; // DateTime!
    ean?: NexusGenScalars['BigInt'] | null; // BigInt
    economicCustomerId?: number | null; // Int
    email: string; // String!
    id: NexusGenScalars['BigInt']; // BigInt!
    name: string; // String!
    paymentDueDays?: number | null; // Int
    phoneNumber: string; // String!
    type: NexusGenEnums['CustomerTypeEnum']; // CustomerTypeEnum!
    updatedDate: NexusGenScalars['DateTime']; // DateTime!
    userId: NexusGenScalars['BigInt']; // BigInt!
    vatId?: string | null; // String
  }
  CustomerConnection: { // root type
    edges: NexusGenRootTypes['CustomerEdge'][]; // [CustomerEdge!]!
    nodes: NexusGenRootTypes['Customer'][]; // [Customer!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number; // Int!
  }
  CustomerEdge: { // root type
    cursor: string; // String!
    node: NexusGenRootTypes['Customer']; // Customer!
  }
  Dashboard: {};
  DashboardItem: { // root type
    amount: NexusGenScalars['Decimal']; // Decimal!
    count: number; // Int!
  }
  Deduction: { // root type
    active: boolean; // Boolean!
    createdDate: NexusGenScalars['DateTime']; // DateTime!
    currency?: string | null; // String
    description: string; // String!
    id: NexusGenScalars['BigInt']; // BigInt!
    includeVat?: boolean | null; // Boolean
    status: NexusGenEnums['DeductionStatusEnum']; // DeductionStatusEnum!
    total?: NexusGenScalars['Decimal'] | null; // Decimal
    totalDkk?: NexusGenScalars['Decimal'] | null; // Decimal
    updatedDate: NexusGenScalars['DateTime']; // DateTime!
    userId: NexusGenScalars['BigInt']; // BigInt!
  }
  DeductionConnection: { // root type
    edges: NexusGenRootTypes['DeductionEdge'][]; // [DeductionEdge!]!
    nodes: NexusGenRootTypes['Deduction'][]; // [Deduction!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number; // Int!
  }
  DeductionEdge: { // root type
    cursor: string; // String!
    node: NexusGenRootTypes['Deduction']; // Deduction!
  }
  Deliverable: { // root type
    createdDate: NexusGenScalars['DateTime']; // DateTime!
    description: string; // String!
    id: NexusGenScalars['BigInt']; // BigInt!
    updatedDate: NexusGenScalars['DateTime']; // DateTime!
  }
  Invoice: { // root type
    active: boolean; // Boolean!
    createdDate: NexusGenScalars['DateTime']; // DateTime!
    creditsUsed: number; // Int!
    currency: string; // String!
    customerAddress: string; // String!
    customerCity: string; // String!
    customerContact: string; // String!
    customerEmail: string; // String!
    customerId: NexusGenScalars['BigInt']; // BigInt!
    customerPostalCode: string; // String!
    discountMaxValue: NexusGenScalars['Decimal']; // Decimal!
    discountType: string; // String!
    discountValue: NexusGenScalars['Decimal']; // Decimal!
    earlyPayment: boolean; // Boolean!
    economicInvoiceId?: number | null; // Int
    endDate?: NexusGenScalars['DateTime'] | null; // DateTime
    feeAmountDkk?: NexusGenScalars['Decimal'] | null; // Decimal
    hoursWorked: number; // Int!
    id: NexusGenScalars['BigInt']; // BigInt!
    includeVat: boolean; // Boolean!
    invoiceDate: NexusGenScalars['DateTime']; // DateTime!
    jobTypeId?: NexusGenScalars['BigInt'] | null; // BigInt
    note?: string | null; // String
    paidAmountDkk?: NexusGenScalars['Decimal'] | null; // Decimal
    paymentDueDays: number; // Int!
    reference?: string | null; // String
    sendInvoiceCopyTo?: string | null; // String
    startDate?: NexusGenScalars['DateTime'] | null; // DateTime
    subtotalDkk: NexusGenScalars['Decimal']; // Decimal!
    taskId?: NexusGenScalars['BigInt'] | null; // BigInt
    termsAccepted: boolean; // Boolean!
    updatedDate: NexusGenScalars['DateTime']; // DateTime!
    userId: NexusGenScalars['BigInt']; // BigInt!
    vacationPayment: boolean; // Boolean!
    visibleId?: NexusGenScalars['BigInt'] | null; // BigInt
  }
  InvoiceConnection: { // root type
    edges: NexusGenRootTypes['InvoiceEdge'][]; // [InvoiceEdge!]!
    nodes: NexusGenRootTypes['Invoice'][]; // [Invoice!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number; // Int!
  }
  InvoiceEdge: { // root type
    cursor: string; // String!
    node: NexusGenRootTypes['Invoice']; // Invoice!
  }
  InvoiceLine: { // root type
    active: boolean; // Boolean!
    createdDate: NexusGenScalars['DateTime']; // DateTime!
    description: string; // String!
    discountPercentage?: number | null; // Float
    id: NexusGenScalars['BigInt']; // BigInt!
    index: number; // Int!
    invoiceId: string; // ID!
    quantity: number; // Float!
    unit?: string | null; // String
    unitPrice: number; // Float!
    updatedDate: NexusGenScalars['DateTime']; // DateTime!
    userId: NexusGenScalars['BigInt']; // BigInt!
  }
  JobType: { // root type
    active: boolean; // Boolean!
    classification?: string | null; // String
    createdDate: NexusGenScalars['DateTime']; // DateTime!
    description: string; // String!
    group: boolean; // Boolean!
    id: NexusGenScalars['BigInt']; // BigInt!
    name_da: string; // String!
    name_en: string; // String!
    parentId?: NexusGenScalars['BigInt'] | null; // BigInt
    updatedDate: NexusGenScalars['DateTime']; // DateTime!
  }
  Mutation: {};
  PageInfo: { // root type
    endCursor?: string | null; // String
    hasNextPage: boolean; // Boolean!
    hasPreviousPage: boolean; // Boolean!
    startCursor?: string | null; // String
  }
  Query: {};
  Referral: { // root type
    createdDate: NexusGenScalars['DateTime']; // DateTime!
    email: string; // String!
    id: NexusGenScalars['BigInt']; // BigInt!
    message: string; // String!
    status: NexusGenEnums['ReferralStatusEnum']; // ReferralStatusEnum!
    updatedDate: NexusGenScalars['DateTime']; // DateTime!
    userId: NexusGenScalars['BigInt']; // BigInt!
  }
  ReferralConnection: { // root type
    edges: NexusGenRootTypes['ReferralEdge'][]; // [ReferralEdge!]!
    nodes: NexusGenRootTypes['Referral'][]; // [Referral!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number; // Int!
  }
  ReferralEdge: { // root type
    cursor: string; // String!
    node: NexusGenRootTypes['Referral']; // Referral!
  }
  Salary: { // root type
    createdDate: NexusGenScalars['DateTime']; // DateTime!
    deductions?: NexusGenRootTypes['Deduction'][] | null; // [Deduction!]
    grossIncome?: NexusGenScalars['Decimal'] | null; // Decimal
    id: NexusGenScalars['BigInt']; // BigInt!
    invoices?: NexusGenRootTypes['Invoice'][] | null; // [Invoice!]
    paymentAmount?: NexusGenScalars['Decimal'] | null; // Decimal
    paymentDate: NexusGenScalars['DateTime']; // DateTime!
    status: NexusGenEnums['SalaryStatusEnum']; // SalaryStatusEnum!
    updatedDate: NexusGenScalars['DateTime']; // DateTime!
    userId: NexusGenScalars['BigInt']; // BigInt!
  }
  SalaryConnection: { // root type
    edges: NexusGenRootTypes['SalaryEdge'][]; // [SalaryEdge!]!
    nodes: NexusGenRootTypes['Salary'][]; // [Salary!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number; // Int!
  }
  SalaryEdge: { // root type
    cursor: string; // String!
    node: NexusGenRootTypes['Salary']; // Salary!
  }
  ServiceLog: { // root type
    createdDate: NexusGenScalars['DateTime']; // DateTime!
    id: NexusGenScalars['BigInt']; // BigInt!
    message?: string | null; // String
    recordId?: NexusGenScalars['BigInt'] | null; // BigInt
    recordType?: NexusGenEnums['RecordTypeEnum'] | null; // RecordTypeEnum
    service?: string | null; // String
    status?: string | null; // String
    updatedDate: NexusGenScalars['DateTime']; // DateTime!
  }
  ServiceLogConnection: { // root type
    edges: NexusGenRootTypes['ServiceLogEdge'][]; // [ServiceLogEdge!]!
    nodes: NexusGenRootTypes['ServiceLog'][]; // [ServiceLog!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number; // Int!
  }
  ServiceLogEdge: { // root type
    cursor: string; // String!
    node: NexusGenRootTypes['ServiceLog']; // ServiceLog!
  }
  StatusDetail: { // root type
    completedStatus: boolean; // Boolean!
    description: string; // String!
    id: NexusGenEnums['StatusEnum']; // StatusEnum!
    invoiceStatus: boolean; // Boolean!
    invoicedStatus: boolean; // Boolean!
    openStatus: boolean; // Boolean!
    taskStatus: boolean; // Boolean!
  }
  SuccessResult: { // root type
    id: NexusGenScalars['BigInt']; // BigInt!
    success?: boolean | null; // Boolean
  }
  Task: { // root type
    active: boolean; // Boolean!
    createdDate: NexusGenScalars['DateTime']; // DateTime!
    customerId: NexusGenScalars['BigInt']; // BigInt!
    description?: string | null; // String
    endDate: NexusGenScalars['DateTime']; // DateTime!
    expectedHours: number; // Int!
    id: NexusGenScalars['BigInt']; // BigInt!
    jobTypeId: NexusGenScalars['BigInt']; // BigInt!
    paymentAmount?: NexusGenScalars['Decimal'] | null; // Decimal
    paymentType?: NexusGenEnums['TaskPaymentTypeEnum'] | null; // TaskPaymentTypeEnum
    reference?: string | null; // String
    startDate: NexusGenScalars['DateTime']; // DateTime!
    status: NexusGenEnums['TaskStatusEnum']; // TaskStatusEnum!
    termsAccepted: boolean; // Boolean!
    title: string; // String!
    updatedDate: NexusGenScalars['DateTime']; // DateTime!
    userId: NexusGenScalars['BigInt']; // BigInt!
  }
  TaskConnection: { // root type
    edges: NexusGenRootTypes['TaskEdge'][]; // [TaskEdge!]!
    nodes: NexusGenRootTypes['Task'][]; // [Task!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number; // Int!
  }
  TaskEdge: { // root type
    cursor: string; // String!
    node: NexusGenRootTypes['Task']; // Task!
  }
  TaxInfo: { // root type
    countryId?: NexusGenScalars['BigInt'] | null; // BigInt
    createdDate: NexusGenScalars['DateTime']; // DateTime!
    personId?: string | null; // String
    taxCard?: string | null; // String
    updatedDate: NexusGenScalars['DateTime']; // DateTime!
    userId: NexusGenScalars['BigInt']; // BigInt!
  }
  User: { // root type
    accountSetupComplete?: boolean | null; // Boolean
    active: boolean; // Boolean!
    baseRate?: number | null; // Float
    conversionTracked: boolean; // Boolean!
    createdDate: NexusGenScalars['DateTime']; // DateTime!
    currency?: string | null; // String
    economicCustomerGroupId?: number | null; // Int
    economicEmployeeId?: number | null; // Int
    email: string; // String!
    emailVerified: boolean; // Boolean!
    firstName?: string | null; // String
    freelancerSituation?: string | null; // String
    id: NexusGenScalars['BigInt']; // BigInt!
    jobTypeId?: NexusGenScalars['BigInt'] | null; // BigInt
    language: string; // String!
    lastActive?: NexusGenScalars['DateTime'] | null; // DateTime
    lastName?: string | null; // String
    locale?: string | null; // String
    loginCount: number; // Int!
    phoneNumber?: string | null; // String
    referral?: string | null; // String
    referralLinkCode?: string | null; // String
    role: NexusGenEnums['RoleEnum']; // RoleEnum!
    salaryPaymentDay?: number | null; // Float
    salaryPaymentType?: NexusGenEnums['SalaryPaymentTypeEnum'] | null; // SalaryPaymentTypeEnum
    salaryPaymentValue?: number | null; // Float
    unit?: string | null; // String
    updatedDate: NexusGenScalars['DateTime']; // DateTime!
    userSpecifiedReferral?: string | null; // String
    uuid: string; // String!
    vacationPayment: boolean; // Boolean!
  }
  UserConnection: { // root type
    edges: NexusGenRootTypes['UserEdge'][]; // [UserEdge!]!
    nodes: NexusGenRootTypes['User'][]; // [User!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number; // Int!
  }
  UserEdge: { // root type
    cursor: string; // String!
    node: NexusGenRootTypes['User']; // User!
  }
  VatSearchResult: { // root type
    address?: string | null; // String
    city?: string | null; // String
    email?: string | null; // String
    name?: string | null; // String
    phoneNumber?: string | null; // String
    postalCode?: string | null; // String
    vatId?: NexusGenScalars['BigInt'] | null; // BigInt
  }
}

export interface NexusGenInterfaces {
  CustomerRelation: NexusGenRootTypes['CooperationAgreement'];
  Node: NexusGenRootTypes['Address'] | NexusGenRootTypes['Audit'] | NexusGenRootTypes['CooperationAgreement'] | NexusGenRootTypes['Country'] | NexusGenRootTypes['Customer'] | NexusGenRootTypes['Deduction'] | NexusGenRootTypes['Deliverable'] | NexusGenRootTypes['Invoice'] | NexusGenRootTypes['InvoiceLine'] | NexusGenRootTypes['JobType'] | NexusGenRootTypes['Referral'] | NexusGenRootTypes['Salary'] | NexusGenRootTypes['ServiceLog'] | NexusGenRootTypes['Task'] | NexusGenRootTypes['User'];
  Owned: NexusGenRootTypes['Address'] | NexusGenRootTypes['BankAccount'] | NexusGenRootTypes['CooperationAgreement'] | NexusGenRootTypes['Customer'] | NexusGenRootTypes['Deduction'] | NexusGenRootTypes['Invoice'] | NexusGenRootTypes['InvoiceLine'] | NexusGenRootTypes['Referral'] | NexusGenRootTypes['Salary'] | NexusGenRootTypes['Task'] | NexusGenRootTypes['TaxInfo'];
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenInterfaces & NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  Address: { // field return type
    active: boolean; // Boolean!
    address: string; // String!
    city: string; // String!
    country: NexusGenRootTypes['Country']; // Country!
    countryId: NexusGenScalars['BigInt']; // BigInt!
    createdDate: NexusGenScalars['DateTime']; // DateTime!
    id: NexusGenScalars['BigInt']; // BigInt!
    postalCode: string; // String!
    region: string | null; // String
    updatedDate: NexusGenScalars['DateTime']; // DateTime!
    urn: string; // ID!
    user: NexusGenRootTypes['User']; // User!
    userId: NexusGenScalars['BigInt']; // BigInt!
  }
  Audit: { // field return type
    createdDate: NexusGenScalars['DateTime']; // DateTime!
    event: string | null; // String
    id: NexusGenScalars['BigInt']; // BigInt!
    recordId: NexusGenScalars['BigInt'] | null; // BigInt
    recordType: string | null; // String
    updatedDate: NexusGenScalars['DateTime']; // DateTime!
    updatedValue: string | null; // String
    urn: string; // ID!
    user: NexusGenRootTypes['User'] | null; // User
    userId: NexusGenScalars['BigInt'] | null; // BigInt
    value: string | null; // String
  }
  AuditConnection: { // field return type
    edges: NexusGenRootTypes['AuditEdge'][]; // [AuditEdge!]!
    nodes: NexusGenRootTypes['Audit'][]; // [Audit!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number; // Int!
  }
  AuditEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Audit']; // Audit!
  }
  BankAccount: { // field return type
    bankAccount: string | null; // String
    bankName: string | null; // String
    bankRegistration: string | null; // String
    createdDate: NexusGenScalars['DateTime']; // DateTime!
    default: boolean | null; // Boolean
    updatedDate: NexusGenScalars['DateTime']; // DateTime!
    user: NexusGenRootTypes['User']; // User!
    userId: NexusGenScalars['BigInt']; // BigInt!
  }
  BulkUpdateResult: { // field return type
    success: boolean | null; // Boolean
  }
  CooperationAgreement: { // field return type
    active: boolean; // Boolean!
    createdDate: NexusGenScalars['DateTime']; // DateTime!
    customer: NexusGenRootTypes['Customer']; // Customer!
    customerId: NexusGenScalars['BigInt']; // BigInt!
    deliverables: NexusGenRootTypes['Deliverable'][]; // [Deliverable!]!
    endDate: NexusGenScalars['DateTime'] | null; // DateTime
    equipmentDetails: string | null; // String
    equipmentSupplied: boolean | null; // Boolean
    extraWork: boolean; // Boolean!
    extraWorkNotification: string | null; // String
    extraWorkNotificationOther: string | null; // String
    id: NexusGenScalars['BigInt']; // BigInt!
    openEnded: boolean; // Boolean!
    paymentTerm: string; // String!
    paymentTermDays: number; // Int!
    paymentTermOther: string | null; // String
    paymentTermSpecial: string | null; // String
    paymentType: string; // String!
    specialConditions: string | null; // String
    startDate: NexusGenScalars['DateTime']; // DateTime!
    taskDescription: string; // String!
    terminationAgreement: string; // String!
    updatedDate: NexusGenScalars['DateTime']; // DateTime!
    urn: string; // ID!
    user: NexusGenRootTypes['User']; // User!
    userId: NexusGenScalars['BigInt']; // BigInt!
  }
  CooperationAgreementConnection: { // field return type
    edges: NexusGenRootTypes['CooperationAgreementEdge'][]; // [CooperationAgreementEdge!]!
    nodes: NexusGenRootTypes['CooperationAgreement'][]; // [CooperationAgreement!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number; // Int!
  }
  CooperationAgreementEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['CooperationAgreement']; // CooperationAgreement!
  }
  Country: { // field return type
    active: boolean; // Boolean!
    code: string; // String!
    createdDate: NexusGenScalars['DateTime']; // DateTime!
    id: NexusGenScalars['BigInt']; // BigInt!
    name_da: string; // String!
    name_en: string; // String!
    updatedDate: NexusGenScalars['DateTime']; // DateTime!
    urn: string; // ID!
  }
  Customer: { // field return type
    active: boolean; // Boolean!
    address: NexusGenRootTypes['Address']; // Address!
    allowEarlyPayment: boolean | null; // Boolean
    completedInvoices: number; // Int!
    contact: string; // String!
    createdDate: NexusGenScalars['DateTime']; // DateTime!
    ean: NexusGenScalars['BigInt'] | null; // BigInt
    economicCustomerId: number | null; // Int
    email: string; // String!
    id: NexusGenScalars['BigInt']; // BigInt!
    invoicedTotal: number; // Float!
    name: string; // String!
    openInvoices: number; // Int!
    paymentDueDays: number | null; // Int
    phoneNumber: string; // String!
    type: NexusGenEnums['CustomerTypeEnum']; // CustomerTypeEnum!
    updatedDate: NexusGenScalars['DateTime']; // DateTime!
    urn: string; // ID!
    user: NexusGenRootTypes['User']; // User!
    userId: NexusGenScalars['BigInt']; // BigInt!
    vatId: string | null; // String
  }
  CustomerConnection: { // field return type
    edges: NexusGenRootTypes['CustomerEdge'][]; // [CustomerEdge!]!
    nodes: NexusGenRootTypes['Customer'][]; // [Customer!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number; // Int!
  }
  CustomerEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Customer']; // Customer!
  }
  Dashboard: { // field return type
    draft: NexusGenRootTypes['DashboardItem'] | null; // DashboardItem
    expired: NexusGenRootTypes['DashboardItem'] | null; // DashboardItem
    open: NexusGenRootTypes['DashboardItem'] | null; // DashboardItem
    paidOut: NexusGenRootTypes['DashboardItem'] | null; // DashboardItem
  }
  DashboardItem: { // field return type
    amount: NexusGenScalars['Decimal']; // Decimal!
    count: number; // Int!
  }
  Deduction: { // field return type
    active: boolean; // Boolean!
    createdDate: NexusGenScalars['DateTime']; // DateTime!
    currency: string | null; // String
    description: string; // String!
    id: NexusGenScalars['BigInt']; // BigInt!
    imageUrl: string | null; // String
    includeVat: boolean | null; // Boolean
    status: NexusGenEnums['DeductionStatusEnum']; // DeductionStatusEnum!
    total: NexusGenScalars['Decimal'] | null; // Decimal
    totalDkk: NexusGenScalars['Decimal'] | null; // Decimal
    updatedDate: NexusGenScalars['DateTime']; // DateTime!
    urn: string; // ID!
    user: NexusGenRootTypes['User']; // User!
    userId: NexusGenScalars['BigInt']; // BigInt!
  }
  DeductionConnection: { // field return type
    edges: NexusGenRootTypes['DeductionEdge'][]; // [DeductionEdge!]!
    nodes: NexusGenRootTypes['Deduction'][]; // [Deduction!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number; // Int!
  }
  DeductionEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Deduction']; // Deduction!
  }
  Deliverable: { // field return type
    createdDate: NexusGenScalars['DateTime']; // DateTime!
    description: string; // String!
    id: NexusGenScalars['BigInt']; // BigInt!
    updatedDate: NexusGenScalars['DateTime']; // DateTime!
    urn: string; // ID!
  }
  Invoice: { // field return type
    active: boolean; // Boolean!
    createdDate: NexusGenScalars['DateTime']; // DateTime!
    creditsUsed: number; // Int!
    currency: string; // String!
    customer: NexusGenRootTypes['Customer']; // Customer!
    customerAddress: string; // String!
    customerCity: string; // String!
    customerContact: string; // String!
    customerEmail: string; // String!
    customerId: NexusGenScalars['BigInt']; // BigInt!
    customerPostalCode: string; // String!
    discountMaxValue: NexusGenScalars['Decimal']; // Decimal!
    discountType: string; // String!
    discountValue: NexusGenScalars['Decimal']; // Decimal!
    dueDate: NexusGenScalars['DateTime']; // DateTime!
    earlyPayment: boolean; // Boolean!
    economicInvoiceId: number | null; // Int
    endDate: NexusGenScalars['DateTime'] | null; // DateTime
    feeAmountDkk: NexusGenScalars['Decimal'] | null; // Decimal
    hoursWorked: number; // Int!
    id: NexusGenScalars['BigInt']; // BigInt!
    includeVat: boolean; // Boolean!
    invoiceDate: NexusGenScalars['DateTime']; // DateTime!
    jobType: NexusGenRootTypes['JobType'] | null; // JobType
    jobTypeId: NexusGenScalars['BigInt'] | null; // BigInt
    lines: NexusGenRootTypes['InvoiceLine'][]; // [InvoiceLine!]!
    note: string | null; // String
    overdue: boolean; // Boolean!
    paidAmountDkk: NexusGenScalars['Decimal'] | null; // Decimal
    paymentDueDays: number; // Int!
    reference: string | null; // String
    sendInvoiceCopyTo: string | null; // String
    serviceLogs: NexusGenRootTypes['ServiceLog'][]; // [ServiceLog!]!
    startDate: NexusGenScalars['DateTime'] | null; // DateTime
    status: NexusGenEnums['InvoiceStatusEnum']; // InvoiceStatusEnum!
    subtotalDkk: NexusGenScalars['Decimal']; // Decimal!
    task: NexusGenRootTypes['Task'] | null; // Task
    taskId: NexusGenScalars['BigInt'] | null; // BigInt
    termsAccepted: boolean; // Boolean!
    totalPrice: number; // Float!
    totalPriceWithVat: number; // Float!
    updatedDate: NexusGenScalars['DateTime']; // DateTime!
    urn: string; // ID!
    user: NexusGenRootTypes['User']; // User!
    userId: NexusGenScalars['BigInt']; // BigInt!
    vacationPayment: boolean; // Boolean!
    vatAmount: number; // Float!
    vatPercentage: number; // Float!
    visibleId: NexusGenScalars['BigInt'] | null; // BigInt
  }
  InvoiceConnection: { // field return type
    edges: NexusGenRootTypes['InvoiceEdge'][]; // [InvoiceEdge!]!
    nodes: NexusGenRootTypes['Invoice'][]; // [Invoice!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number; // Int!
  }
  InvoiceEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Invoice']; // Invoice!
  }
  InvoiceLine: { // field return type
    active: boolean; // Boolean!
    createdDate: NexusGenScalars['DateTime']; // DateTime!
    description: string; // String!
    discountPercentage: number | null; // Float
    id: NexusGenScalars['BigInt']; // BigInt!
    index: number; // Int!
    invoice: NexusGenRootTypes['Invoice']; // Invoice!
    invoiceId: string; // ID!
    quantity: number; // Float!
    totalPrice: number; // Float!
    unit: string | null; // String
    unitPrice: number; // Float!
    updatedDate: NexusGenScalars['DateTime']; // DateTime!
    urn: string; // ID!
    user: NexusGenRootTypes['User']; // User!
    userId: NexusGenScalars['BigInt']; // BigInt!
  }
  JobType: { // field return type
    active: boolean; // Boolean!
    classification: string | null; // String
    createdDate: NexusGenScalars['DateTime']; // DateTime!
    description: string; // String!
    group: boolean; // Boolean!
    id: NexusGenScalars['BigInt']; // BigInt!
    name_da: string; // String!
    name_en: string; // String!
    parent: NexusGenRootTypes['JobType'] | null; // JobType
    parentId: NexusGenScalars['BigInt'] | null; // BigInt
    updatedDate: NexusGenScalars['DateTime']; // DateTime!
    urn: string; // ID!
  }
  Mutation: { // field return type
    createCooperationAgreement: NexusGenRootTypes['CooperationAgreement'] | null; // CooperationAgreement
    createCustomer: NexusGenRootTypes['Customer']; // Customer!
    createDeduction: NexusGenRootTypes['Deduction'] | null; // Deduction
    createInvoice: NexusGenRootTypes['Invoice']; // Invoice!
    createReferral: NexusGenRootTypes['Referral'] | null; // Referral
    createSalary: NexusGenRootTypes['Salary'] | null; // Salary
    createTask: NexusGenRootTypes['Task'] | null; // Task
    fetchPayroll: NexusGenRootTypes['SuccessResult']; // SuccessResult!
    sendInvoice: NexusGenRootTypes['SuccessResult']; // SuccessResult!
    updateCooperationAgreement: NexusGenRootTypes['CooperationAgreement'] | null; // CooperationAgreement
    updateCustomer: NexusGenRootTypes['Customer']; // Customer!
    updateDeduction: NexusGenRootTypes['Deduction'] | null; // Deduction
    updateDeductions: NexusGenRootTypes['BulkUpdateResult']; // BulkUpdateResult!
    updateInvoice: NexusGenRootTypes['Invoice']; // Invoice!
    updateInvoices: NexusGenRootTypes['BulkUpdateResult']; // BulkUpdateResult!
    updateSalary: NexusGenRootTypes['Salary'] | null; // Salary
    updateTask: NexusGenRootTypes['Task'] | null; // Task
    updateTaskStatus: NexusGenRootTypes['Task'] | null; // Task
    updateUser: NexusGenRootTypes['User']; // User!
  }
  PageInfo: { // field return type
    endCursor: string | null; // String
    hasNextPage: boolean; // Boolean!
    hasPreviousPage: boolean; // Boolean!
    startCursor: string | null; // String
  }
  Query: { // field return type
    audit: NexusGenRootTypes['Audit'] | null; // Audit
    audits: NexusGenRootTypes['AuditConnection']; // AuditConnection!
    cooperationAgreement: NexusGenRootTypes['CooperationAgreement'] | null; // CooperationAgreement
    cooperationAgreements: NexusGenRootTypes['CooperationAgreementConnection']; // CooperationAgreementConnection!
    countries: NexusGenRootTypes['Country'][]; // [Country!]!
    country: NexusGenRootTypes['Country'] | null; // Country
    customer: NexusGenRootTypes['Customer'] | null; // Customer
    customers: NexusGenRootTypes['CustomerConnection']; // CustomerConnection!
    dashboard: NexusGenRootTypes['Dashboard'] | null; // Dashboard
    deduction: NexusGenRootTypes['Deduction'] | null; // Deduction
    deductions: NexusGenRootTypes['DeductionConnection']; // DeductionConnection!
    invoice: NexusGenRootTypes['Invoice'] | null; // Invoice
    invoices: NexusGenRootTypes['InvoiceConnection']; // InvoiceConnection!
    jobType: NexusGenRootTypes['JobType'] | null; // JobType
    jobTypes: NexusGenRootTypes['JobType'][]; // [JobType!]!
    me: NexusGenRootTypes['User']; // User!
    referral: NexusGenRootTypes['Referral'] | null; // Referral
    referrals: NexusGenRootTypes['ReferralConnection']; // ReferralConnection!
    salaries: NexusGenRootTypes['SalaryConnection']; // SalaryConnection!
    salary: NexusGenRootTypes['Salary'] | null; // Salary
    serviceLog: NexusGenRootTypes['ServiceLog'] | null; // ServiceLog
    serviceLogs: NexusGenRootTypes['ServiceLogConnection']; // ServiceLogConnection!
    task: NexusGenRootTypes['Task'] | null; // Task
    tasks: NexusGenRootTypes['TaskConnection']; // TaskConnection!
    user: NexusGenRootTypes['User'] | null; // User
    users: NexusGenRootTypes['UserConnection']; // UserConnection!
    vatSearch: NexusGenRootTypes['VatSearchResult'][]; // [VatSearchResult!]!
  }
  Referral: { // field return type
    createdDate: NexusGenScalars['DateTime']; // DateTime!
    email: string; // String!
    id: NexusGenScalars['BigInt']; // BigInt!
    message: string; // String!
    referredUser: NexusGenRootTypes['User'] | null; // User
    status: NexusGenEnums['ReferralStatusEnum']; // ReferralStatusEnum!
    updatedDate: NexusGenScalars['DateTime']; // DateTime!
    urn: string; // ID!
    user: NexusGenRootTypes['User']; // User!
    userId: NexusGenScalars['BigInt']; // BigInt!
  }
  ReferralConnection: { // field return type
    edges: NexusGenRootTypes['ReferralEdge'][]; // [ReferralEdge!]!
    nodes: NexusGenRootTypes['Referral'][]; // [Referral!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number; // Int!
  }
  ReferralEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Referral']; // Referral!
  }
  Salary: { // field return type
    createdDate: NexusGenScalars['DateTime']; // DateTime!
    deductions: NexusGenRootTypes['Deduction'][] | null; // [Deduction!]
    feeInvoiceUrl: string | null; // String
    grossIncome: NexusGenScalars['Decimal'] | null; // Decimal
    id: NexusGenScalars['BigInt']; // BigInt!
    invoices: NexusGenRootTypes['Invoice'][] | null; // [Invoice!]
    paymentAmount: NexusGenScalars['Decimal'] | null; // Decimal
    paymentDate: NexusGenScalars['DateTime']; // DateTime!
    payslipUrl: string | null; // String
    status: NexusGenEnums['SalaryStatusEnum']; // SalaryStatusEnum!
    updatedDate: NexusGenScalars['DateTime']; // DateTime!
    urn: string; // ID!
    user: NexusGenRootTypes['User']; // User!
    userId: NexusGenScalars['BigInt']; // BigInt!
  }
  SalaryConnection: { // field return type
    edges: NexusGenRootTypes['SalaryEdge'][]; // [SalaryEdge!]!
    nodes: NexusGenRootTypes['Salary'][]; // [Salary!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number; // Int!
  }
  SalaryEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Salary']; // Salary!
  }
  ServiceLog: { // field return type
    createdDate: NexusGenScalars['DateTime']; // DateTime!
    id: NexusGenScalars['BigInt']; // BigInt!
    message: string | null; // String
    recordId: NexusGenScalars['BigInt'] | null; // BigInt
    recordType: NexusGenEnums['RecordTypeEnum'] | null; // RecordTypeEnum
    service: string | null; // String
    status: string | null; // String
    updatedDate: NexusGenScalars['DateTime']; // DateTime!
    urn: string; // ID!
  }
  ServiceLogConnection: { // field return type
    edges: NexusGenRootTypes['ServiceLogEdge'][]; // [ServiceLogEdge!]!
    nodes: NexusGenRootTypes['ServiceLog'][]; // [ServiceLog!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number; // Int!
  }
  ServiceLogEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['ServiceLog']; // ServiceLog!
  }
  StatusDetail: { // field return type
    completedStatus: boolean; // Boolean!
    description: string; // String!
    id: NexusGenEnums['StatusEnum']; // StatusEnum!
    invoiceStatus: boolean; // Boolean!
    invoicedStatus: boolean; // Boolean!
    openStatus: boolean; // Boolean!
    taskStatus: boolean; // Boolean!
  }
  SuccessResult: { // field return type
    id: NexusGenScalars['BigInt']; // BigInt!
    success: boolean | null; // Boolean
  }
  Task: { // field return type
    active: boolean; // Boolean!
    createdDate: NexusGenScalars['DateTime']; // DateTime!
    customer: NexusGenRootTypes['Customer']; // Customer!
    customerId: NexusGenScalars['BigInt']; // BigInt!
    description: string | null; // String
    endDate: NexusGenScalars['DateTime']; // DateTime!
    expectedHours: number; // Int!
    id: NexusGenScalars['BigInt']; // BigInt!
    jobType: NexusGenRootTypes['JobType']; // JobType!
    jobTypeId: NexusGenScalars['BigInt']; // BigInt!
    paymentAmount: NexusGenScalars['Decimal'] | null; // Decimal
    paymentType: NexusGenEnums['TaskPaymentTypeEnum'] | null; // TaskPaymentTypeEnum
    reference: string | null; // String
    startDate: NexusGenScalars['DateTime']; // DateTime!
    status: NexusGenEnums['TaskStatusEnum']; // TaskStatusEnum!
    termsAccepted: boolean; // Boolean!
    title: string; // String!
    updatedDate: NexusGenScalars['DateTime']; // DateTime!
    urn: string; // ID!
    user: NexusGenRootTypes['User']; // User!
    userId: NexusGenScalars['BigInt']; // BigInt!
  }
  TaskConnection: { // field return type
    edges: NexusGenRootTypes['TaskEdge'][]; // [TaskEdge!]!
    nodes: NexusGenRootTypes['Task'][]; // [Task!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number; // Int!
  }
  TaskEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Task']; // Task!
  }
  TaxInfo: { // field return type
    countryId: NexusGenScalars['BigInt'] | null; // BigInt
    createdDate: NexusGenScalars['DateTime']; // DateTime!
    personId: string | null; // String
    taxCard: string | null; // String
    updatedDate: NexusGenScalars['DateTime']; // DateTime!
    user: NexusGenRootTypes['User']; // User!
    userId: NexusGenScalars['BigInt']; // BigInt!
  }
  User: { // field return type
    accountSetupComplete: boolean | null; // Boolean
    active: boolean; // Boolean!
    address: NexusGenRootTypes['Address'] | null; // Address
    availableCredits: number | null; // Int
    bankAccount: NexusGenRootTypes['BankAccount'] | null; // BankAccount
    bankAccountHidden: NexusGenRootTypes['BankAccount'] | null; // BankAccount
    baseRate: number | null; // Float
    conversionTracked: boolean; // Boolean!
    createdDate: NexusGenScalars['DateTime']; // DateTime!
    currency: string | null; // String
    displayName: string; // String!
    economicCustomerGroupId: number | null; // Int
    economicEmployeeId: number | null; // Int
    email: string; // String!
    emailVerified: boolean; // Boolean!
    features: NexusGenScalars['JSON'] | null; // JSON
    firstName: string | null; // String
    freelancerSituation: string | null; // String
    id: NexusGenScalars['BigInt']; // BigInt!
    jobType: NexusGenRootTypes['JobType'] | null; // JobType
    jobTypeId: NexusGenScalars['BigInt'] | null; // BigInt
    language: string; // String!
    lastActive: NexusGenScalars['DateTime'] | null; // DateTime
    lastName: string | null; // String
    locale: string | null; // String
    loginCount: number; // Int!
    phoneNumber: string | null; // String
    referral: string | null; // String
    referralLinkCode: string | null; // String
    role: NexusGenEnums['RoleEnum']; // RoleEnum!
    salaryPaymentDay: number | null; // Float
    salaryPaymentType: NexusGenEnums['SalaryPaymentTypeEnum'] | null; // SalaryPaymentTypeEnum
    salaryPaymentValue: number | null; // Float
    taxInfo: NexusGenRootTypes['TaxInfo'] | null; // TaxInfo
    taxInfoHidden: NexusGenRootTypes['TaxInfo'] | null; // TaxInfo
    unit: string | null; // String
    updatedDate: NexusGenScalars['DateTime']; // DateTime!
    urn: string; // ID!
    userSpecifiedReferral: string | null; // String
    uuid: string; // String!
    vacationPayment: boolean; // Boolean!
  }
  UserConnection: { // field return type
    edges: NexusGenRootTypes['UserEdge'][]; // [UserEdge!]!
    nodes: NexusGenRootTypes['User'][]; // [User!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number; // Int!
  }
  UserEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['User']; // User!
  }
  VatSearchResult: { // field return type
    address: string | null; // String
    city: string | null; // String
    email: string | null; // String
    name: string | null; // String
    phoneNumber: string | null; // String
    postalCode: string | null; // String
    vatId: NexusGenScalars['BigInt'] | null; // BigInt
  }
  CustomerRelation: { // field return type
    customer: NexusGenRootTypes['Customer']; // Customer!
    customerId: NexusGenScalars['BigInt'] | null; // BigInt
  }
  Node: { // field return type
    createdDate: NexusGenScalars['DateTime']; // DateTime!
    id: NexusGenScalars['BigInt']; // BigInt!
    updatedDate: NexusGenScalars['DateTime']; // DateTime!
    urn: string; // ID!
  }
  Owned: { // field return type
    user: NexusGenRootTypes['User']; // User!
    userId: NexusGenScalars['BigInt'] | null; // BigInt
  }
}

export interface NexusGenFieldTypeNames {
  Address: { // field return type name
    active: 'Boolean'
    address: 'String'
    city: 'String'
    country: 'Country'
    countryId: 'BigInt'
    createdDate: 'DateTime'
    id: 'BigInt'
    postalCode: 'String'
    region: 'String'
    updatedDate: 'DateTime'
    urn: 'ID'
    user: 'User'
    userId: 'BigInt'
  }
  Audit: { // field return type name
    createdDate: 'DateTime'
    event: 'String'
    id: 'BigInt'
    recordId: 'BigInt'
    recordType: 'String'
    updatedDate: 'DateTime'
    updatedValue: 'String'
    urn: 'ID'
    user: 'User'
    userId: 'BigInt'
    value: 'String'
  }
  AuditConnection: { // field return type name
    edges: 'AuditEdge'
    nodes: 'Audit'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  AuditEdge: { // field return type name
    cursor: 'String'
    node: 'Audit'
  }
  BankAccount: { // field return type name
    bankAccount: 'String'
    bankName: 'String'
    bankRegistration: 'String'
    createdDate: 'DateTime'
    default: 'Boolean'
    updatedDate: 'DateTime'
    user: 'User'
    userId: 'BigInt'
  }
  BulkUpdateResult: { // field return type name
    success: 'Boolean'
  }
  CooperationAgreement: { // field return type name
    active: 'Boolean'
    createdDate: 'DateTime'
    customer: 'Customer'
    customerId: 'BigInt'
    deliverables: 'Deliverable'
    endDate: 'DateTime'
    equipmentDetails: 'String'
    equipmentSupplied: 'Boolean'
    extraWork: 'Boolean'
    extraWorkNotification: 'String'
    extraWorkNotificationOther: 'String'
    id: 'BigInt'
    openEnded: 'Boolean'
    paymentTerm: 'String'
    paymentTermDays: 'Int'
    paymentTermOther: 'String'
    paymentTermSpecial: 'String'
    paymentType: 'String'
    specialConditions: 'String'
    startDate: 'DateTime'
    taskDescription: 'String'
    terminationAgreement: 'String'
    updatedDate: 'DateTime'
    urn: 'ID'
    user: 'User'
    userId: 'BigInt'
  }
  CooperationAgreementConnection: { // field return type name
    edges: 'CooperationAgreementEdge'
    nodes: 'CooperationAgreement'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  CooperationAgreementEdge: { // field return type name
    cursor: 'String'
    node: 'CooperationAgreement'
  }
  Country: { // field return type name
    active: 'Boolean'
    code: 'String'
    createdDate: 'DateTime'
    id: 'BigInt'
    name_da: 'String'
    name_en: 'String'
    updatedDate: 'DateTime'
    urn: 'ID'
  }
  Customer: { // field return type name
    active: 'Boolean'
    address: 'Address'
    allowEarlyPayment: 'Boolean'
    completedInvoices: 'Int'
    contact: 'String'
    createdDate: 'DateTime'
    ean: 'BigInt'
    economicCustomerId: 'Int'
    email: 'String'
    id: 'BigInt'
    invoicedTotal: 'Float'
    name: 'String'
    openInvoices: 'Int'
    paymentDueDays: 'Int'
    phoneNumber: 'String'
    type: 'CustomerTypeEnum'
    updatedDate: 'DateTime'
    urn: 'ID'
    user: 'User'
    userId: 'BigInt'
    vatId: 'String'
  }
  CustomerConnection: { // field return type name
    edges: 'CustomerEdge'
    nodes: 'Customer'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  CustomerEdge: { // field return type name
    cursor: 'String'
    node: 'Customer'
  }
  Dashboard: { // field return type name
    draft: 'DashboardItem'
    expired: 'DashboardItem'
    open: 'DashboardItem'
    paidOut: 'DashboardItem'
  }
  DashboardItem: { // field return type name
    amount: 'Decimal'
    count: 'Int'
  }
  Deduction: { // field return type name
    active: 'Boolean'
    createdDate: 'DateTime'
    currency: 'String'
    description: 'String'
    id: 'BigInt'
    imageUrl: 'String'
    includeVat: 'Boolean'
    status: 'DeductionStatusEnum'
    total: 'Decimal'
    totalDkk: 'Decimal'
    updatedDate: 'DateTime'
    urn: 'ID'
    user: 'User'
    userId: 'BigInt'
  }
  DeductionConnection: { // field return type name
    edges: 'DeductionEdge'
    nodes: 'Deduction'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  DeductionEdge: { // field return type name
    cursor: 'String'
    node: 'Deduction'
  }
  Deliverable: { // field return type name
    createdDate: 'DateTime'
    description: 'String'
    id: 'BigInt'
    updatedDate: 'DateTime'
    urn: 'ID'
  }
  Invoice: { // field return type name
    active: 'Boolean'
    createdDate: 'DateTime'
    creditsUsed: 'Int'
    currency: 'String'
    customer: 'Customer'
    customerAddress: 'String'
    customerCity: 'String'
    customerContact: 'String'
    customerEmail: 'String'
    customerId: 'BigInt'
    customerPostalCode: 'String'
    discountMaxValue: 'Decimal'
    discountType: 'String'
    discountValue: 'Decimal'
    dueDate: 'DateTime'
    earlyPayment: 'Boolean'
    economicInvoiceId: 'Int'
    endDate: 'DateTime'
    feeAmountDkk: 'Decimal'
    hoursWorked: 'Int'
    id: 'BigInt'
    includeVat: 'Boolean'
    invoiceDate: 'DateTime'
    jobType: 'JobType'
    jobTypeId: 'BigInt'
    lines: 'InvoiceLine'
    note: 'String'
    overdue: 'Boolean'
    paidAmountDkk: 'Decimal'
    paymentDueDays: 'Int'
    reference: 'String'
    sendInvoiceCopyTo: 'String'
    serviceLogs: 'ServiceLog'
    startDate: 'DateTime'
    status: 'InvoiceStatusEnum'
    subtotalDkk: 'Decimal'
    task: 'Task'
    taskId: 'BigInt'
    termsAccepted: 'Boolean'
    totalPrice: 'Float'
    totalPriceWithVat: 'Float'
    updatedDate: 'DateTime'
    urn: 'ID'
    user: 'User'
    userId: 'BigInt'
    vacationPayment: 'Boolean'
    vatAmount: 'Float'
    vatPercentage: 'Float'
    visibleId: 'BigInt'
  }
  InvoiceConnection: { // field return type name
    edges: 'InvoiceEdge'
    nodes: 'Invoice'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  InvoiceEdge: { // field return type name
    cursor: 'String'
    node: 'Invoice'
  }
  InvoiceLine: { // field return type name
    active: 'Boolean'
    createdDate: 'DateTime'
    description: 'String'
    discountPercentage: 'Float'
    id: 'BigInt'
    index: 'Int'
    invoice: 'Invoice'
    invoiceId: 'ID'
    quantity: 'Float'
    totalPrice: 'Float'
    unit: 'String'
    unitPrice: 'Float'
    updatedDate: 'DateTime'
    urn: 'ID'
    user: 'User'
    userId: 'BigInt'
  }
  JobType: { // field return type name
    active: 'Boolean'
    classification: 'String'
    createdDate: 'DateTime'
    description: 'String'
    group: 'Boolean'
    id: 'BigInt'
    name_da: 'String'
    name_en: 'String'
    parent: 'JobType'
    parentId: 'BigInt'
    updatedDate: 'DateTime'
    urn: 'ID'
  }
  Mutation: { // field return type name
    createCooperationAgreement: 'CooperationAgreement'
    createCustomer: 'Customer'
    createDeduction: 'Deduction'
    createInvoice: 'Invoice'
    createReferral: 'Referral'
    createSalary: 'Salary'
    createTask: 'Task'
    fetchPayroll: 'SuccessResult'
    sendInvoice: 'SuccessResult'
    updateCooperationAgreement: 'CooperationAgreement'
    updateCustomer: 'Customer'
    updateDeduction: 'Deduction'
    updateDeductions: 'BulkUpdateResult'
    updateInvoice: 'Invoice'
    updateInvoices: 'BulkUpdateResult'
    updateSalary: 'Salary'
    updateTask: 'Task'
    updateTaskStatus: 'Task'
    updateUser: 'User'
  }
  PageInfo: { // field return type name
    endCursor: 'String'
    hasNextPage: 'Boolean'
    hasPreviousPage: 'Boolean'
    startCursor: 'String'
  }
  Query: { // field return type name
    audit: 'Audit'
    audits: 'AuditConnection'
    cooperationAgreement: 'CooperationAgreement'
    cooperationAgreements: 'CooperationAgreementConnection'
    countries: 'Country'
    country: 'Country'
    customer: 'Customer'
    customers: 'CustomerConnection'
    dashboard: 'Dashboard'
    deduction: 'Deduction'
    deductions: 'DeductionConnection'
    invoice: 'Invoice'
    invoices: 'InvoiceConnection'
    jobType: 'JobType'
    jobTypes: 'JobType'
    me: 'User'
    referral: 'Referral'
    referrals: 'ReferralConnection'
    salaries: 'SalaryConnection'
    salary: 'Salary'
    serviceLog: 'ServiceLog'
    serviceLogs: 'ServiceLogConnection'
    task: 'Task'
    tasks: 'TaskConnection'
    user: 'User'
    users: 'UserConnection'
    vatSearch: 'VatSearchResult'
  }
  Referral: { // field return type name
    createdDate: 'DateTime'
    email: 'String'
    id: 'BigInt'
    message: 'String'
    referredUser: 'User'
    status: 'ReferralStatusEnum'
    updatedDate: 'DateTime'
    urn: 'ID'
    user: 'User'
    userId: 'BigInt'
  }
  ReferralConnection: { // field return type name
    edges: 'ReferralEdge'
    nodes: 'Referral'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  ReferralEdge: { // field return type name
    cursor: 'String'
    node: 'Referral'
  }
  Salary: { // field return type name
    createdDate: 'DateTime'
    deductions: 'Deduction'
    feeInvoiceUrl: 'String'
    grossIncome: 'Decimal'
    id: 'BigInt'
    invoices: 'Invoice'
    paymentAmount: 'Decimal'
    paymentDate: 'DateTime'
    payslipUrl: 'String'
    status: 'SalaryStatusEnum'
    updatedDate: 'DateTime'
    urn: 'ID'
    user: 'User'
    userId: 'BigInt'
  }
  SalaryConnection: { // field return type name
    edges: 'SalaryEdge'
    nodes: 'Salary'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  SalaryEdge: { // field return type name
    cursor: 'String'
    node: 'Salary'
  }
  ServiceLog: { // field return type name
    createdDate: 'DateTime'
    id: 'BigInt'
    message: 'String'
    recordId: 'BigInt'
    recordType: 'RecordTypeEnum'
    service: 'String'
    status: 'String'
    updatedDate: 'DateTime'
    urn: 'ID'
  }
  ServiceLogConnection: { // field return type name
    edges: 'ServiceLogEdge'
    nodes: 'ServiceLog'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  ServiceLogEdge: { // field return type name
    cursor: 'String'
    node: 'ServiceLog'
  }
  StatusDetail: { // field return type name
    completedStatus: 'Boolean'
    description: 'String'
    id: 'StatusEnum'
    invoiceStatus: 'Boolean'
    invoicedStatus: 'Boolean'
    openStatus: 'Boolean'
    taskStatus: 'Boolean'
  }
  SuccessResult: { // field return type name
    id: 'BigInt'
    success: 'Boolean'
  }
  Task: { // field return type name
    active: 'Boolean'
    createdDate: 'DateTime'
    customer: 'Customer'
    customerId: 'BigInt'
    description: 'String'
    endDate: 'DateTime'
    expectedHours: 'Int'
    id: 'BigInt'
    jobType: 'JobType'
    jobTypeId: 'BigInt'
    paymentAmount: 'Decimal'
    paymentType: 'TaskPaymentTypeEnum'
    reference: 'String'
    startDate: 'DateTime'
    status: 'TaskStatusEnum'
    termsAccepted: 'Boolean'
    title: 'String'
    updatedDate: 'DateTime'
    urn: 'ID'
    user: 'User'
    userId: 'BigInt'
  }
  TaskConnection: { // field return type name
    edges: 'TaskEdge'
    nodes: 'Task'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  TaskEdge: { // field return type name
    cursor: 'String'
    node: 'Task'
  }
  TaxInfo: { // field return type name
    countryId: 'BigInt'
    createdDate: 'DateTime'
    personId: 'String'
    taxCard: 'String'
    updatedDate: 'DateTime'
    user: 'User'
    userId: 'BigInt'
  }
  User: { // field return type name
    accountSetupComplete: 'Boolean'
    active: 'Boolean'
    address: 'Address'
    availableCredits: 'Int'
    bankAccount: 'BankAccount'
    bankAccountHidden: 'BankAccount'
    baseRate: 'Float'
    conversionTracked: 'Boolean'
    createdDate: 'DateTime'
    currency: 'String'
    displayName: 'String'
    economicCustomerGroupId: 'Int'
    economicEmployeeId: 'Int'
    email: 'String'
    emailVerified: 'Boolean'
    features: 'JSON'
    firstName: 'String'
    freelancerSituation: 'String'
    id: 'BigInt'
    jobType: 'JobType'
    jobTypeId: 'BigInt'
    language: 'String'
    lastActive: 'DateTime'
    lastName: 'String'
    locale: 'String'
    loginCount: 'Int'
    phoneNumber: 'String'
    referral: 'String'
    referralLinkCode: 'String'
    role: 'RoleEnum'
    salaryPaymentDay: 'Float'
    salaryPaymentType: 'SalaryPaymentTypeEnum'
    salaryPaymentValue: 'Float'
    taxInfo: 'TaxInfo'
    taxInfoHidden: 'TaxInfo'
    unit: 'String'
    updatedDate: 'DateTime'
    urn: 'ID'
    userSpecifiedReferral: 'String'
    uuid: 'String'
    vacationPayment: 'Boolean'
  }
  UserConnection: { // field return type name
    edges: 'UserEdge'
    nodes: 'User'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  UserEdge: { // field return type name
    cursor: 'String'
    node: 'User'
  }
  VatSearchResult: { // field return type name
    address: 'String'
    city: 'String'
    email: 'String'
    name: 'String'
    phoneNumber: 'String'
    postalCode: 'String'
    vatId: 'BigInt'
  }
  CustomerRelation: { // field return type name
    customer: 'Customer'
    customerId: 'BigInt'
  }
  Node: { // field return type name
    createdDate: 'DateTime'
    id: 'BigInt'
    updatedDate: 'DateTime'
    urn: 'ID'
  }
  Owned: { // field return type name
    user: 'User'
    userId: 'BigInt'
  }
}

export interface NexusGenArgTypes {
  CooperationAgreement: {
    deliverables: { // args
      orderBy?: NexusGenInputs['DeliverableOrderByInputArgs'] | null; // DeliverableOrderByInputArgs
    }
  }
  Invoice: {
    lines: { // args
      orderBy?: NexusGenInputs['InvoiceLineOrderByInputArgs'] | null; // InvoiceLineOrderByInputArgs
    }
  }
  Mutation: {
    createCooperationAgreement: { // args
      data: NexusGenInputs['CooperationAgreementCreateInputArgs']; // CooperationAgreementCreateInputArgs!
    }
    createCustomer: { // args
      data: NexusGenInputs['CustomerCreateInputArgs']; // CustomerCreateInputArgs!
    }
    createDeduction: { // args
      data: NexusGenInputs['DeductionCreateInputArgs']; // DeductionCreateInputArgs!
    }
    createInvoice: { // args
      data: NexusGenInputs['InvoiceCreateInputArgs']; // InvoiceCreateInputArgs!
    }
    createReferral: { // args
      data: NexusGenInputs['ReferralCreateInputArgs']; // ReferralCreateInputArgs!
    }
    createSalary: { // args
      data: NexusGenInputs['SalaryCreateInputArgs']; // SalaryCreateInputArgs!
    }
    createTask: { // args
      data: NexusGenInputs['TaskCreateInputArgs']; // TaskCreateInputArgs!
    }
    fetchPayroll: { // args
      where: NexusGenInputs['WhereUniqueInputArgs']; // WhereUniqueInputArgs!
    }
    sendInvoice: { // args
      where: NexusGenInputs['WhereUniqueInputArgs']; // WhereUniqueInputArgs!
    }
    updateCooperationAgreement: { // args
      data: NexusGenInputs['CooperationAgreementUpdateInputArgs']; // CooperationAgreementUpdateInputArgs!
      where: NexusGenInputs['WhereUniqueInputArgs']; // WhereUniqueInputArgs!
    }
    updateCustomer: { // args
      data: NexusGenInputs['CustomerUpdateInputArgs']; // CustomerUpdateInputArgs!
      where: NexusGenInputs['WhereUniqueInputArgs']; // WhereUniqueInputArgs!
    }
    updateDeduction: { // args
      data: NexusGenInputs['DeductionUpdateInputArgs']; // DeductionUpdateInputArgs!
      where: NexusGenInputs['WhereUniqueInputArgs']; // WhereUniqueInputArgs!
    }
    updateDeductions: { // args
      data: NexusGenInputs['DeductionUpdateInputArgs']; // DeductionUpdateInputArgs!
      where: Array<NexusGenInputs['WhereUniqueInputArgs'] | null>; // [WhereUniqueInputArgs]!
    }
    updateInvoice: { // args
      data: NexusGenInputs['InvoiceUpdateInputArgs']; // InvoiceUpdateInputArgs!
      where: NexusGenInputs['WhereUniqueInputArgs']; // WhereUniqueInputArgs!
    }
    updateInvoices: { // args
      data: Array<NexusGenInputs['InvoiceBulkUpdateInputArgs'] | null>; // [InvoiceBulkUpdateInputArgs]!
    }
    updateSalary: { // args
      data: NexusGenInputs['SalaryUpdateInputArgs']; // SalaryUpdateInputArgs!
      where: NexusGenInputs['WhereUniqueInputArgs']; // WhereUniqueInputArgs!
    }
    updateTask: { // args
      data: NexusGenInputs['TaskUpdateInputArgs']; // TaskUpdateInputArgs!
      where: NexusGenInputs['WhereUniqueInputArgs']; // WhereUniqueInputArgs!
    }
    updateTaskStatus: { // args
      data: NexusGenInputs['TaskUpdateStatusInputArgs']; // TaskUpdateStatusInputArgs!
      where: NexusGenInputs['WhereUniqueInputArgs']; // WhereUniqueInputArgs!
    }
    updateUser: { // args
      data: NexusGenInputs['UserUpdateInputArgs']; // UserUpdateInputArgs!
      where: NexusGenInputs['WhereUniqueInputArgs']; // WhereUniqueInputArgs!
    }
  }
  Query: {
    audit: { // args
      where: NexusGenInputs['WhereUniqueInputArgs']; // WhereUniqueInputArgs!
    }
    audits: { // args
      after?: string | null; // String
      first: number; // Int!
      orderBy?: NexusGenInputs['AuditOrderByInputArgs'] | null; // AuditOrderByInputArgs
      skip?: number | null; // Int
      where?: NexusGenInputs['AuditWhereInputArgs'] | null; // AuditWhereInputArgs
    }
    cooperationAgreement: { // args
      where: NexusGenInputs['WhereUniqueInputArgs']; // WhereUniqueInputArgs!
    }
    cooperationAgreements: { // args
      after?: string | null; // String
      first: number; // Int!
      orderBy?: NexusGenInputs['CooperationAgreementOrderByInputArgs'] | null; // CooperationAgreementOrderByInputArgs
      skip?: number | null; // Int
      where?: NexusGenInputs['CooperationAgreementWhereInputArgs'] | null; // CooperationAgreementWhereInputArgs
    }
    countries: { // args
      orderBy?: NexusGenInputs['CountryOrderByInputArgs'] | null; // CountryOrderByInputArgs
      where?: NexusGenInputs['CountryWhereInputArgs'] | null; // CountryWhereInputArgs
    }
    country: { // args
      where: NexusGenInputs['WhereUniqueInputArgs']; // WhereUniqueInputArgs!
    }
    customer: { // args
      where: NexusGenInputs['WhereUniqueInputArgs']; // WhereUniqueInputArgs!
    }
    customers: { // args
      after?: string | null; // String
      first: number; // Int!
      orderBy?: NexusGenInputs['CustomerOrderByInputArgs'] | null; // CustomerOrderByInputArgs
      skip?: number | null; // Int
      where?: NexusGenInputs['CustomerWhereInputArgs'] | null; // CustomerWhereInputArgs
    }
    deduction: { // args
      where: NexusGenInputs['WhereUniqueInputArgs']; // WhereUniqueInputArgs!
    }
    deductions: { // args
      after?: string | null; // String
      first: number; // Int!
      orderBy?: NexusGenInputs['DeductionOrderByInputArgs'] | null; // DeductionOrderByInputArgs
      skip?: number | null; // Int
      where?: NexusGenInputs['DeductionWhereInputArgs'] | null; // DeductionWhereInputArgs
    }
    invoice: { // args
      where: NexusGenInputs['WhereUniqueInputArgs']; // WhereUniqueInputArgs!
    }
    invoices: { // args
      after?: string | null; // String
      first: number; // Int!
      orderBy?: NexusGenInputs['InvoiceOrderByInputArgs'] | null; // InvoiceOrderByInputArgs
      skip?: number | null; // Int
      where?: NexusGenInputs['InvoiceWhereInputArgs'] | null; // InvoiceWhereInputArgs
    }
    jobType: { // args
      where: NexusGenInputs['WhereUniqueInputArgs']; // WhereUniqueInputArgs!
    }
    jobTypes: { // args
      orderBy?: NexusGenInputs['JobTypeOrderByInputArgs'] | null; // JobTypeOrderByInputArgs
      where?: NexusGenInputs['JobTypeWhereInputArgs'] | null; // JobTypeWhereInputArgs
    }
    referral: { // args
      where: NexusGenInputs['WhereUniqueInputArgs']; // WhereUniqueInputArgs!
    }
    referrals: { // args
      after?: string | null; // String
      first: number; // Int!
      orderBy?: NexusGenInputs['ReferralOrderByInputArgs'] | null; // ReferralOrderByInputArgs
      skip?: number | null; // Int
      where?: NexusGenInputs['ReferralWhereInputArgs'] | null; // ReferralWhereInputArgs
    }
    salaries: { // args
      after?: string | null; // String
      first: number; // Int!
      orderBy?: NexusGenInputs['SalaryOrderByInputArgs'] | null; // SalaryOrderByInputArgs
      skip?: number | null; // Int
      where?: NexusGenInputs['SalaryWhereInputArgs'] | null; // SalaryWhereInputArgs
    }
    salary: { // args
      where: NexusGenInputs['WhereUniqueInputArgs']; // WhereUniqueInputArgs!
    }
    serviceLog: { // args
      where: NexusGenInputs['WhereUniqueInputArgs']; // WhereUniqueInputArgs!
    }
    serviceLogs: { // args
      after?: string | null; // String
      first: number; // Int!
      orderBy?: NexusGenInputs['ServiceLogOrderByInputArgs'] | null; // ServiceLogOrderByInputArgs
      skip?: number | null; // Int
      where?: NexusGenInputs['ServiceLogWhereInputArgs'] | null; // ServiceLogWhereInputArgs
    }
    task: { // args
      where: NexusGenInputs['WhereUniqueInputArgs']; // WhereUniqueInputArgs!
    }
    tasks: { // args
      after?: string | null; // String
      first: number; // Int!
      orderBy?: NexusGenInputs['TaskOrderByInputArgs'] | null; // TaskOrderByInputArgs
      skip?: number | null; // Int
      where?: NexusGenInputs['TaskWhereInputArgs'] | null; // TaskWhereInputArgs
    }
    user: { // args
      where: NexusGenInputs['WhereUniqueInputArgs']; // WhereUniqueInputArgs!
    }
    users: { // args
      after?: string | null; // String
      first: number; // Int!
      orderBy?: NexusGenInputs['UserOrderByInputArgs'] | null; // UserOrderByInputArgs
      skip?: number | null; // Int
      where?: NexusGenInputs['UserWhereInputArgs'] | null; // UserWhereInputArgs
    }
    vatSearch: { // args
      query: string; // String!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
  CustomerRelation: "CooperationAgreement"
  Node: "Address" | "Audit" | "CooperationAgreement" | "Country" | "Customer" | "Deduction" | "Deliverable" | "Invoice" | "InvoiceLine" | "JobType" | "Referral" | "Salary" | "ServiceLog" | "Task" | "User"
  Owned: "Address" | "BankAccount" | "CooperationAgreement" | "Customer" | "Deduction" | "Invoice" | "InvoiceLine" | "Referral" | "Salary" | "Task" | "TaxInfo"
}

export interface NexusGenTypeInterfaces {
  Address: "Node" | "Owned"
  Audit: "Node"
  BankAccount: "Owned"
  CooperationAgreement: "CustomerRelation" | "Node" | "Owned"
  Country: "Node"
  Customer: "Node" | "Owned"
  Deduction: "Node" | "Owned"
  Deliverable: "Node"
  Invoice: "Node" | "Owned"
  InvoiceLine: "Node" | "Owned"
  JobType: "Node"
  Referral: "Node" | "Owned"
  Salary: "Node" | "Owned"
  ServiceLog: "Node"
  Task: "Node" | "Owned"
  TaxInfo: "Owned"
  User: "Node"
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = keyof NexusGenInterfaces;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = "CustomerRelation" | "Node" | "Owned";

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
    /**
     * The nullability guard can be helpful, but is also a potentially expensive operation for lists.
     * We need to iterate the entire list to check for null items to guard against. Set this to true
     * to skip the null guard on a specific field if you know there's no potential for unsafe types.
     */
    skipNullGuard?: boolean
    /**
     * The complexity for an individual field. Return a number
     * or a function that returns a number to specify the
     * complexity for this field.
     */
    complexity?: QueryComplexity<TypeName, FieldName>
    /**
     * Authorization for an individual field. Returning "true"
     * or "Promise<true>" means the field can be accessed.
     * Returning "false" or "Promise<false>" will respond
     * with a "Not Authorized" error for the field.
     * Returning or throwing an error will also prevent the
     * resolver from executing.
     */
    authorize?: FieldAuthorizeResolver<TypeName, FieldName>
    
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}